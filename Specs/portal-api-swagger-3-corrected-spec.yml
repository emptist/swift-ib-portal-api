openapi: 3.0.1
info:
  title: Client Portal Web API
  description: Production version of the Client Portal Web API
  version: 1.0.0
servers:
  - url: /v1/portal
paths:
  /fyi/unreadnumber:
    get:
      tags:
        - FYI
      summary: Get unread number of fyis. The HTTP method POST is also supported.
      description: |
        Returns the total number of unread fyis
      responses:
        200:
          description: An object
          content:
            application/json:
              schema:
                type: object
                properties:
                  BN:
                    type: integer
                    description: unread number
  /fyi/settings:
    get:
      tags:
        - FYI
      summary: Get a list of subscriptions
      description: |
        Return the current choices of subscriptions, we can toggle the option
      responses:
        200:
          description: An array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    A:
                      type: integer
                      description:
                        optional, if A doesn't exist, it means user can't
                        toggle this option. 0-off, 1-on.
                    FC:
                      type: string
                      description: fyi code
                    H:
                      type: integer
                      description: disclaimer read, 1 = yes, = 0 no.
                    FD:
                      type: string
                      description: detailed description
                    FN:
                      type: string
                      description: title
  /fyi/settings/{typecode}:
    post:
      tags:
        - FYI
      summary: Enable/Disable certain subscription
      description: |
        Configure which typecode you would like to enable/disable.
      parameters:
        - name: typecode
          in: path
          description: fyi code
          required: true
          schema:
            type: string
      requestBody:
        content:
          "*/*":
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
        required: true
      responses:
        200:
          description: 200 means successful
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: body
  /fyi/disclaimer/{typecode}:
    get:
      tags:
        - FYI
      summary: Get disclaimer for a certain kind of fyi
      parameters:
        - name: typecode
          in: path
          description: fyi code, for example --M8, EA
          required: true
          schema:
            type: string
      responses:
        200:
          description: receives the disclaimer message
          content:
            application/json:
              schema:
                type: object
                properties:
                  DT:
                    type: string
                    description: disclaimer message
                  FC:
                    type: string
                    description: fyi code
    put:
      tags:
        - FYI
      summary: Mark disclaimer read
      parameters:
        - name: typecode
          in: path
          description: fyi code, for example --M8, EA
          required: true
          schema:
            type: string
      responses:
        200:
          description: 200 means successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  T:
                    type: integer
                  V:
                    type: integer
  /fyi/deliveryoptions:
    get:
      tags:
        - FYI
      summary: Get delivery options
      description: |
        options for sending fyis to email and other devices
      responses:
        200:
          description: An object
          content:
            application/json:
              schema:
                type: object
                properties:
                  M:
                    type: integer
                    description: Email option is enabled or not 0-off, 1-on.
                  E:
                    type: array
                    items:
                      type: object
                      properties:
                        NM:
                          type: string
                          description: device name
                        I:
                          type: string
                          description: device id
                        UI:
                          type: string
                          description: unique device id
                        A:
                          type: string
                          description: device is enabled or not 0-true, 1-false.
                      description: device
  /fyi/deliveryoptions/email:
    put:
      tags:
        - FYI
      summary: Enable/Disable email option
      parameters:
        - name: enabled
          in: query
          description: true/false
          required: true
          schema:
            type: string
      responses:
        200:
          description: 200 means successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  T:
                    type: integer
                  V:
                    type: integer
  /fyi/deliveryoptions/device:
    post:
      tags:
        - FYI
      summary: Enable/Disable device option
      requestBody:
        description: device info
        content:
          "*/*":
            schema:
              type: object
              properties:
                devicename:
                  type: string
                deviceId:
                  type: string
                uiName:
                  type: string
                enabled:
                  type: boolean
        required: true
      responses:
        200:
          description: 200 means successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  T:
                    type: integer
                  V:
                    type: integer
      x-codegen-request-body-name: body
  /fyi/deliveryoptions/{deviceId}:
    delete:
      tags:
        - FYI
      summary: Delete a device
      parameters:
        - name: deviceId
          in: path
          description: device ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: 200 means successful
          content:
            application/json:
              schema:
                type: object
  /fyi/notifications:
    get:
      tags:
        - FYI
      summary: Get a list of notifications
      parameters:
        - name: exclude
          in: query
          description: if set, don't set include
          schema:
            type: string
        - name: include
          in: query
          description: if set, don't set exclude
          schema:
            type: string
        - name: max
          in: query
          description: max number of fyis in response
          required: true
          schema:
            type: string
      responses:
        200:
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notifications"
  /fyi/notifications/more:
    get:
      tags:
        - FYI
      summary: Get more notifications based on a certain one
      parameters:
        - name: id
          in: query
          description: id of last notification in the list
          required: true
          schema:
            type: string
      responses:
        200:
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notifications"
  /fyi/notifications/{notificationId}:
    put:
      tags:
        - FYI
      summary: Get a list of notifications
      parameters:
        - name: notificationId
          in: path
          description: mark a notification read
          required: true
          schema:
            type: string
      responses:
        200:
          description: when 200 receives, it means successful
          content:
            application/json:
              schema:
                type: object
  /ws:
    post:
      tags:
        - Streaming
      summary: Websocket Endpoint
      description:
        The streaming API is documented under [Streaming WebSocket Data](https://interactivebrokers.github.io/cpwebapi/RealtimeSubscription.html)
        for details.
      responses:
        200:
          description: confirms session is open
          content: {}
  /tickle:
    post:
      tags:
        - Session
      summary: Ping the server to keep the session open
      description:
        If the gateway has not received any requests for several minutes
        an open session will automatically timeout. The tickle endpoint pings the
        server to prevent the session from ending.
      responses:
        200:
          description: confirms session is open
          content: {}
  /logout:
    post:
      tags:
        - Session
      summary: Ends the current session
      description:
        Logs the user out of the gateway session. Any further activity
        requires re-authentication.
      responses:
        200:
          description: returned status indicates if user is logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  confirmed:
                    type: boolean
                    description:
                      true means username is still logged in, false means
                      it is not
  /ibcust/entity/info:
    get:
      tags:
        - IBCust
      summary: IBCust Entity Info
      description: Returns Applicant Id with all owner related entities
      responses:
        200:
          description: Search result
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    applicantId:
                      type: number
                    entities:
                      type: array
                      items:
                        type: object
                        properties:
                          canTrade:
                            type: boolean
                          canSign:
                            type: boolean
                          type:
                            type: string
                          name:
                            type: object
                            properties:
                              salutation:
                                type: string
                              firstName:
                                type: string
                              lastName:
                                type: string
                          address:
                            type: object
                            properties:
                              street:
                                type: string
                              street2:
                                type: string
                              city:
                                type: string
                              state:
                                type: string
                              postalCode:
                                type: string
                              country:
                                type: string
                              countryCode:
                                type: string
                              compact:
                                type: string
                          identDocs:
                            type: array
                            items:
                              type: object
                              properties: {}
  /pa/performance:
    post:
      tags:
        - PortfolioAnalyst
      summary: Account Performance
      description:
        Returns the performance (MTM) for the given accounts, if more than
        one account is passed, the result is consolidated.
      requestBody:
        description: an array of account ids
        content:
          "*/*":
            schema:
              type: object
              properties:
                acctIds:
                  type: array
                  items:
                    type: string
                    description: account id
                freq:
                  type: string
                  description: |
                    Frequency of cumulative performance data points: 'D'aily, 'M'onthly,'Q'uarterly.
                  enum:
                    - D
                    - M
                    - Q
        required: true
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/performance"
      x-codegen-request-body-name: body
  /pa/summary:
    post:
      tags:
        - PortfolioAnalyst
      summary: Account Balance's Summary
      description:
        Returns a summary of all account balances for the given accounts,
        if more than one account is passed, the result is consolidated.
      requestBody:
        description: an array of account ids
        content:
          "*/*":
            schema:
              type: object
              properties:
                acctIds:
                  type: array
                  items:
                    type: string
                    description: account id
        required: true
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary"
      x-codegen-request-body-name: body
  /pa/transactions:
    post:
      tags:
        - PortfolioAnalyst
      summary: Position's Transaction History
      description: |
        transaction history for a given number of conids and accounts.
        Types of transactions include dividend payments, buy and sell transactions, transfers.
      requestBody:
        content:
          "*/*":
            schema:
              type: object
              properties:
                acctIds:
                  type: array
                  items:
                    type: string
                    description: account id
                conids:
                  type: array
                  items:
                    type: number
                    description: array only supports one conid at a time.
                currency:
                  type: string
                  description: optional defaults to USD.
                  example: USD
                days:
                  type: number
                  description: optional, default value is 90
                  example: 7.0
        required: true
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transactions"
      x-codegen-request-body-name: body
  /sso/validate:
    get:
      tags:
        - Session
      summary: Validate SSO
      description: Validates the current session for the SSO user
      responses:
        200:
          description: An Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  LOGIN_TYPE:
                    type: number
                    description: 1 for Live, 2 for Paper
                  USER_NAME:
                    type: string
                    description: Username
                  USER_ID:
                    type: number
                    description: User ID
                  expire:
                    type: number
                    description:
                      Time in milliseconds until session expires. Caller
                      needs to call the again to re-validate session
                  RESULT:
                    type: boolean
                    description: true if session was validated; false if not.
                  AUTH_TIME:
                    type: number
                    description: Time of session validation
        401:
          description: Authentication failed
          content: {}
        500:
          description: System failed
          content: {}
  /portfolio/accounts:
    get:
      tags:
        - Account
        - Portfolio
      summary: Portfolio Accounts
      description:
        In non-tiered account structures, returns a list of accounts for
        which the user can view position and account information. This endpoint must
        be called prior  to calling other /portfolio endpoints for those accounts.
        For querying a list of accounts  which the user can trade, see /iserver/accounts.
        For a list of subaccounts in tiered  account structures (e.g. financial advisor
        or ibroker accounts) see /portfolio/subaccounts.
      responses:
        200:
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accounts"
  /portfolio/subaccounts:
    get:
      tags:
        - Account
        - Portfolio
      summary: List of Sub-Accounts
      description:
        Used in tiered account structures (such as financial advisor and
        ibroker accounts)  to return a list of sub-accounts for which the user can
        view position and  account-related information. This endpoint must be called
        prior to calling other  /portfolio endpoints for those subaccounts.  To query
        a list of accounts the user can trade, see /iserver/accounts.
      responses:
        200:
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account"
  /portfolio/{accountId}/meta:
    get:
      tags:
        - Account
        - Portfolio
      summary: Account Information
      description:
        Account information related to account Id /portfolio/accounts or
        /portfolio/subaccounts must be called prior to this endpoint.
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      responses:
        200:
          description: An object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accounts"
  /portfolio/{accountId}/allocation:
    get:
      tags:
        - Portfolio
      summary: Account Allocation
      description:
        Information about the account's portfolio allocation by Asset Class,
        Industry and Category.  /portfolio/accounts or /portfolio/subaccounts must
        be called prior to this endpoint.
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      responses:
        200:
          description: returns an object of three different allocations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/allocations"
  /portfolio/allocation:
    post:
      tags:
        - Portfolio
      summary: Account Alloction (All Accounts)
      description:
        Similar to /portfolio/{accountId}/allocation but returns a consolidated
        view of of all the accounts returned by /portfolio/accounts. /portfolio/accounts
        or /portfolio/subaccounts must be called prior to this endpoint.
      requestBody:
        description: accounts info
        content:
          "*/*":
            schema:
              type: object
              properties:
                acctIds:
                  type: array
                  items:
                    type: string
                    description: account id
        required: true
      responses:
        200:
          description: returns an object of three different allocations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/allocations"
      x-codegen-request-body-name: body
  /portfolio/{accountId}/positions/{pageId}:
    get:
      tags:
        - Portfolio
      summary: Portfolio Positions
      description:
        Returns a list of positions for the given account. The endpoint
        supports paging, page's default size is 30 positions. /portfolio/accounts
        or /portfolio/subaccounts must be called prior to this endpoint.
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
        - name: pageId
          in: path
          description: page id
          required: true
          schema:
            type: string
            default: "0"
        - name: model
          in: query
          description: optional
          schema:
            type: string
        - name: sort
          in: query
          description: declare the table to be sorted by which column
          schema:
            type: string
        - name: direction
          in: query
          description: in which order, a means ascending - d means descending
          schema:
            type: string
        - name: period
          in: query
          description: period for pnl column, can be 1D, 7D, 1M...
          schema:
            type: string
      responses:
        200:
          description: returns a list of positions in the portfolio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/positions"
  /portfolio/{accountId}/position/{conid}:
    get:
      tags:
        - Portfolio
      summary: Position by Conid
      description:
        Returns a list of all positions matching the conid. For portfolio
        models the conid could be in more than one model, returning an array with
        the name of the model it belongs to.  /portfolio/accounts or /portfolio/subaccounts
        must be called prior to this endpoint.
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
        - name: conid
          in: path
          description: contract id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: returns a list containing only one position for the conid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/positions"
  /portfolio/{accountId}/positions/invalidate:
    post:
      tags:
        - Portfolio
      summary: Invalidates the backend cache of the Portfolio
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Means successful
          content:
            application/json:
              schema:
                type: object
  /portfolio/{accountId}/summary:
    get:
      tags:
        - Account
        - Portfolio
      summary: Account Summary
      description:
        Returns information about margin, cash balances and other information
        related to specified account. See also /portfolio/{accountId}/ledger. /portfolio/accounts
        or /portfolio/subaccounts must be called prior to this endpoint.
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            returns an object containing account summary. The object contains
            multiple properties. A property is sufficed with -c if its provides commodity
            value, -s if it provides security value and -c if its UKL segment value
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountready:
                    $ref: "#/components/schemas/summary"
                  accounttype:
                    $ref: "#/components/schemas/summary"
                  accruedcash:
                    $ref: "#/components/schemas/summary"
                  accruedcash-c:
                    $ref: "#/components/schemas/summary"
                  accruedcash-f:
                    $ref: "#/components/schemas/summary"
                  accruedcash-s:
                    $ref: "#/components/schemas/summary"
                  accrueddividend:
                    $ref: "#/components/schemas/summary"
                  accrueddividend-c:
                    $ref: "#/components/schemas/summary"
                  accrueddividend-f:
                    $ref: "#/components/schemas/summary"
                  accrueddividend-s:
                    $ref: "#/components/schemas/summary"
                  availablefunds:
                    $ref: "#/components/schemas/summary"
                  availablefunds-c:
                    $ref: "#/components/schemas/summary"
                  availablefunds-f:
                    $ref: "#/components/schemas/summary"
                  availablefunds-s:
                    $ref: "#/components/schemas/summary"
                  billable:
                    $ref: "#/components/schemas/summary"
                  billable-c:
                    $ref: "#/components/schemas/summary"
                  billable-f:
                    $ref: "#/components/schemas/summary"
                  billable-s:
                    $ref: "#/components/schemas/summary"
                  buyingpower:
                    $ref: "#/components/schemas/summary"
                  cushion:
                    $ref: "#/components/schemas/summary"
                  daytradesremaining:
                    $ref: "#/components/schemas/summary"
                  daytradesremainingt+1:
                    $ref: "#/components/schemas/summary"
                  daytradesremainingt+2:
                    $ref: "#/components/schemas/summary"
                  daytradesremainingt+3:
                    $ref: "#/components/schemas/summary"
                  daytradesremainingt+4:
                    $ref: "#/components/schemas/summary"
                  equitywithloanvalue:
                    $ref: "#/components/schemas/summary"
                  equitywithloanvalue-c:
                    $ref: "#/components/schemas/summary"
                  equitywithloanvalue-f:
                    $ref: "#/components/schemas/summary"
                  equitywithloanvalue-s:
                    $ref: "#/components/schemas/summary"
                  excessliquidity:
                    $ref: "#/components/schemas/summary"
                  excessliquidity-c:
                    $ref: "#/components/schemas/summary"
                  excessliquidity-f:
                    $ref: "#/components/schemas/summary"
                  excessliquidity-s:
                    $ref: "#/components/schemas/summary"
                  fullavailablefunds:
                    $ref: "#/components/schemas/summary"
                  fullavailablefunds-c:
                    $ref: "#/components/schemas/summary"
                  fullavailablefunds-f:
                    $ref: "#/components/schemas/summary"
                  fullavailablefunds-s:
                    $ref: "#/components/schemas/summary"
                  fullexcessliquidity:
                    $ref: "#/components/schemas/summary"
                  fullexcessliquidity-c:
                    $ref: "#/components/schemas/summary"
                  fullexcessliquidity-f:
                    $ref: "#/components/schemas/summary"
                  fullexcessliquidity-s:
                    $ref: "#/components/schemas/summary"
                  fullinitmarginreq:
                    $ref: "#/components/schemas/summary"
                  fullinitmarginreq-c:
                    $ref: "#/components/schemas/summary"
                  fullinitmarginreq-f:
                    $ref: "#/components/schemas/summary"
                  fullinitmarginreq-s:
                    $ref: "#/components/schemas/summary"
                  fullmaintmarginreq:
                    $ref: "#/components/schemas/summary"
                  fullmaintmarginreq-c:
                    $ref: "#/components/schemas/summary"
                  fullmaintmarginreq-f:
                    $ref: "#/components/schemas/summary"
                  fullmaintmarginreq-s:
                    $ref: "#/components/schemas/summary"
                  grosspositionvalue:
                    $ref: "#/components/schemas/summary"
                  grosspositionvalue-c:
                    $ref: "#/components/schemas/summary"
                  grosspositionvalue-f:
                    $ref: "#/components/schemas/summary"
                  grosspositionvalue-s:
                    $ref: "#/components/schemas/summary"
                  guarantee:
                    $ref: "#/components/schemas/summary"
                  guarantee-c:
                    $ref: "#/components/schemas/summary"
                  guarantee-f:
                    $ref: "#/components/schemas/summary"
                  guarantee-s:
                    $ref: "#/components/schemas/summary"
                  highestseverity:
                    $ref: "#/components/schemas/summary"
                  highestseverity-c:
                    $ref: "#/components/schemas/summary"
                  highestseverity-f:
                    $ref: "#/components/schemas/summary"
                  highestseverity-s:
                    $ref: "#/components/schemas/summary"
                  indianstockhaircut:
                    $ref: "#/components/schemas/summary"
                  indianstockhaircut-c:
                    $ref: "#/components/schemas/summary"
                  indianstockhaircut-f:
                    $ref: "#/components/schemas/summary"
                  indianstockhaircut-s:
                    $ref: "#/components/schemas/summary"
                  initmarginreq:
                    $ref: "#/components/schemas/summary"
                  initmarginreq-c:
                    $ref: "#/components/schemas/summary"
                  initmarginreq-f:
                    $ref: "#/components/schemas/summary"
                  initmarginreq-s:
                    $ref: "#/components/schemas/summary"
                  leverage:
                    $ref: "#/components/schemas/summary"
                  leverage-c:
                    $ref: "#/components/schemas/summary"
                  leverage-f:
                    $ref: "#/components/schemas/summary"
                  leverage-s:
                    $ref: "#/components/schemas/summary"
                  lookaheadavailablefunds:
                    $ref: "#/components/schemas/summary"
                  lookaheadavailablefunds-c:
                    $ref: "#/components/schemas/summary"
                  lookaheadavailablefunds-f:
                    $ref: "#/components/schemas/summary"
                  lookaheadavailablefunds-s:
                    $ref: "#/components/schemas/summary"
                  lookaheadexcessliquidity:
                    $ref: "#/components/schemas/summary"
                  lookaheadexcessliquidity-c:
                    $ref: "#/components/schemas/summary"
                  lookaheadexcessliquidity-f:
                    $ref: "#/components/schemas/summary"
                  lookaheadexcessliquidity-s:
                    $ref: "#/components/schemas/summary"
                  lookaheadinitmarginreq:
                    $ref: "#/components/schemas/summary"
                  lookaheadinitmarginreq-c:
                    $ref: "#/components/schemas/summary"
                  lookaheadinitmarginreq-f:
                    $ref: "#/components/schemas/summary"
                  lookaheadinitmarginreq-s:
                    $ref: "#/components/schemas/summary"
                  lookaheadmaintmarginreq:
                    $ref: "#/components/schemas/summary"
                  lookaheadmaintmarginreq-c:
                    $ref: "#/components/schemas/summary"
                  lookaheadmaintmarginreq-f:
                    $ref: "#/components/schemas/summary"
                  lookaheadmaintmarginreq-s:
                    $ref: "#/components/schemas/summary"
                  lookaheadnextchange:
                    $ref: "#/components/schemas/summary"
                  maintmarginreq:
                    $ref: "#/components/schemas/summary"
                  maintmarginreq-c:
                    $ref: "#/components/schemas/summary"
                  maintmarginreq-f:
                    $ref: "#/components/schemas/summary"
                  maintmarginreq-s:
                    $ref: "#/components/schemas/summary"
                  netliquidation:
                    $ref: "#/components/schemas/summary"
                  netliquidation-c:
                    $ref: "#/components/schemas/summary"
                  netliquidation-f:
                    $ref: "#/components/schemas/summary"
                  netliquidation-s:
                    $ref: "#/components/schemas/summary"
                  netliquidationuncertainty:
                    $ref: "#/components/schemas/summary"
                  nlvandmargininreview:
                    $ref: "#/components/schemas/summary"
                  pasharesvalue:
                    $ref: "#/components/schemas/summary"
                  pasharesvalue-c:
                    $ref: "#/components/schemas/summary"
                  pasharesvalue-f:
                    $ref: "#/components/schemas/summary"
                  pasharesvalue-s:
                    $ref: "#/components/schemas/summary"
                  postexpirationexcess:
                    $ref: "#/components/schemas/summary"
                  postexpirationexcess-c:
                    $ref: "#/components/schemas/summary"
                  postexpirationexcess-f:
                    $ref: "#/components/schemas/summary"
                  postexpirationexcess-s:
                    $ref: "#/components/schemas/summary"
                  postexpirationmargin:
                    $ref: "#/components/schemas/summary"
                  postexpirationmargin-c:
                    $ref: "#/components/schemas/summary"
                  postexpirationmargin-f:
                    $ref: "#/components/schemas/summary"
                  postexpirationmargin-s:
                    $ref: "#/components/schemas/summary"
                  previousdayequitywithloanvalue:
                    $ref: "#/components/schemas/summary"
                  previousdayequitywithloanvalue-c:
                    $ref: "#/components/schemas/summary"
                  previousdayequitywithloanvalue-f:
                    $ref: "#/components/schemas/summary"
                  previousdayequitywithloanvalue-s:
                    $ref: "#/components/schemas/summary"
                  segmenttitle-c:
                    $ref: "#/components/schemas/summary"
                  segmenttitle-f:
                    $ref: "#/components/schemas/summary"
                  segmenttitle-s:
                    $ref: "#/components/schemas/summary"
                  totalcashvalue:
                    $ref: "#/components/schemas/summary"
                  totalcashvalue-c:
                    $ref: "#/components/schemas/summary"
                  totalcashvalue-f:
                    $ref: "#/components/schemas/summary"
                  totalcashvalue-s:
                    $ref: "#/components/schemas/summary"
                  totaldebitcardpendingcharges:
                    $ref: "#/components/schemas/summary"
                  totaldebitcardpendingcharges-c:
                    $ref: "#/components/schemas/summary"
                  totaldebitcardpendingcharges-f:
                    $ref: "#/components/schemas/summary"
                  totaldebitcardpendingcharges-s:
                    $ref: "#/components/schemas/summary"
                  tradingtype-f:
                    $ref: "#/components/schemas/summary"
                  tradingtype-s:
                    $ref: "#/components/schemas/summary"
  /portfolio/{accountId}/ledger:
    get:
      tags:
        - Account
        - Portfolio
      summary: Account Ledger
      description:
        Information regarding settled cash, cash balances, etc. in the
        account's base currency and any other cash balances hold in other currencies.  /portfolio/accounts
        or /portfolio/subaccounts must be called prior to this endpoint. The list
        of supported currencies is available at https://www.interactivebrokers.com/en/index.php?f=3185.
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      responses:
        200:
          description: 200 means successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  BASE:
                    $ref: "#/components/schemas/ledger"
  /portfolio/positions/{conid}:
    get:
      tags:
        - Portfolio
      summary: Positions by Conid
      description:
        Returns an object of all positions matching the conid for all the
        selected accounts. For portfolio models the conid could be in more than one
        model, returning an array with the name of the model it belongs to. /portfolio/accounts
        or /portfolio/subaccounts must be called prior to this endpoint.
      parameters:
        - name: conid
          in: path
          description: contract id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: returns an object containing account and its position information
          content:
            application/json:
              schema:
                type: object
                properties:
                  ACCTID:
                    $ref: "#/components/schemas/positions"
  /iserver/auth/status:
    post:
      tags:
        - Session
      summary: Authentication Status
      description:
        Current Authentication status to the Brokerage system. Market Data
        and Trading is not possible if not authenticated, e.g. authenticated shows
        false
      responses:
        200:
          description: Authentication Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authStatus"
  /iserver/reauthenticate:
    post:
      tags:
        - Session
      summary: Tries to re-authenticate to Brokerage
      description: |
        When using the CP Gateway, this endpoint provides a way to reauthenticate to the Brokerage system as long as there is a valid SSO session, see /sso/validate.
      responses:
        200:
          description: Authentication Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authStatus"
  /iserver/account/trades:
    get:
      tags:
        - Trades
      summary: List of Trades for the selected account
      description: |
        Returns a list of trades for the currently selected account for current day and six previous days. It is advised to call this endpoint once per session.
      responses:
        200:
          description: An array of trades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/trade"
  /iserver/accounts:
    get:
      tags:
        - Account
      summary: Brokerage Accounts
      description:
        Returns a list of accounts the user has trading access to, their
        respective aliases and the currently selected account. Note this endpoint
        must be called before modifying an order or querying open orders.
      responses:
        200:
          description: An array of accounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    description: Unique account id
                    items:
                      type: string
                  aliases:
                    type: object
                    properties: {}
                    description: Account Id and its alias
                  selectedAccount:
                    type: string
  /iserver/account:
    post:
      tags:
        - Account
      summary: Updates currently selected account to the provided account
      description:
        If an user has multiple accounts, and user wants to get orders,
        trades, etc. of an account other than currently selected account, then user
        can update the currently selected account using this API and then can fetch
        required information for the newly updated account.
      requestBody:
        description: account id
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/set-account"
        required: true
      responses:
        200:
          description: an object containing updated account ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  set:
                    type: boolean
                  acctId:
                    type: string
      x-codegen-request-body-name: body
  /iserver/account/{accountId}/alert:
    post:
      tags:
        - Alert
      summary: Create or modify alert
      description: |
        Please note here, DO NOT pass orderId when creating a new alert, toolId is only required for MTA alert
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      requestBody:
        description: alert info
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/alert-request"
        required: true
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: integer
                  order_id:
                    type: integer
                  success:
                    type: boolean
                  text:
                    type: string
                  order_status:
                    type: string
                  warning_message:
                    type: string
      x-codegen-request-body-name: body
  /iserver/account/{accountId}/alerts:
    get:
      tags:
        - Alert
      summary: Get a list of available alerts
      description:
        The response will contain both active and inactive alerts, but
        it won't have MTA alert
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      responses:
        200:
          description: returns an array of objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    order_id:
                      type: integer
                    account:
                      type: string
                      description: account id
                    alert_name:
                      type: string
                    alert_active:
                      type: integer
                      description: Value can only be 0 or 1, 1 means active
                    order_time:
                      type: string
                      description: |
                        format, YYYYMMDD-HH:mm:ss, the time when you created the alert
                    alert_triggered:
                      type: boolean
                      description: whether the alert has been triggered or not
                    alert_repeatable:
                      type: integer
                      description:
                        whether the alert can be repeatable or not, value
                        can be 1 or 0. 1 means true
  /iserver/account/{accountId}/alert/activate:
    post:
      tags:
        - Alert
      summary: Activate or deactivate an alert
      description: Please note, if alertId is 0, it will activate/deactivate all alerts
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      requestBody:
        description: order request info
        content:
          "*/*":
            schema:
              type: object
              properties:
                alertId:
                  type: integer
                  description: alert id(order id)
                alertActive:
                  type: integer
                  description: 1 to activate, 0 to deactivate
        required: true
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: integer
                  order_id:
                    type: integer
                  success:
                    type: boolean
                  text:
                    type: string
                  order_status:
                    type: string
                  failure_list:
                    type: string
      x-codegen-request-body-name: body
  /iserver/account/{accountId}/alert/{alertId}:
    delete:
      tags:
        - Alert
      summary: Delete an alert
      description: Please be careful, if alertId is 0, it will delete all alerts
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
        - name: alertId
          in: path
          description: alert id
          required: true
          schema:
            type: string
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: integer
                  order_id:
                    type: integer
                  success:
                    type: boolean
                  text:
                    type: string
                  order_status:
                    type: string
                  failure_list:
                    type: string
  /iserver/account/alert/{id}:
    get:
      tags:
        - Alert
      summary: Get details of an alert
      description: |
        Use the endpoint /iserver/account/{accountId}/alerts to receive the alert id.
        The order_id in the response is the alert id.
      parameters:
        - name: id
          in: path
          description: alert id
          required: true
          schema:
            type: string
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/alert-response"
  /iserver/account/mta:
    get:
      tags:
        - Alert
      summary: Get MTA alert
      description: |
        Each login user only has one mobile trading assistant (MTA) alert with it's own unique tool id.
        The tool id cannot be changed. When modified a new order Id is generated. MTA alerts can not
        be created or deleted. If you call delete /iserver/account/:accountId/alert/:alertId,
        it will reset MTA to default. See [here](https://www.interactivebrokers.com/en/software/mobileiphonemobile/mobileiphone.htm#monitor/trading-assistant.htm) for more information on MTA alerts.
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/alert-response"
  /iserver/account/orders:
    get:
      tags:
        - Order
      summary: Live Orders
      description:
        "The endpoint is meant to be used in polling mode, e.g. requesting\
        \ every x seconds.\nThe response will contain two objects, one is notification,\
        \ the other is orders. \nOrders is the list of live orders (cancelled, filled,\
        \ submitted). \nNotifications contains information about execute orders as\
        \ they happen, see status field.\nTo receive streaming live orders the endpoint\
        \ /ws can be used. Refer to [Streaming WebSocket Data](https://interactivebrokers.github.io/cpwebapi/RealtimeSubscription.html)\
        \ for details.\n"
      requestBody:
        description: an array of filters
        content:
          "*/*":
            schema:
              type: object
              properties:
                filters:
                  type: array
                  items:
                    type: string
                    description:
                      "Only return list of orders for filter value. More\
                      \ than one filter can be specified comma separated. \nAcceptable\
                      \ values are inactive,pending_submit,pre_submitted,submitted,filled,pending_cancel,cancelled,warn_state,sort_by_time.\n"
        required: false
      responses:
        200:
          description: An object contains two arrays
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        acct:
                          type: string
                          description: Account number
                        exchange:
                          type: string
                          description: Exchange or trading venue
                        conid:
                          type: number
                          description: Contract identifier
                        orderId:
                          type: string
                          description: Order identifier
                        cashCcy:
                          type: string
                          description: Cash currency
                        sizeAndFills:
                          type: number
                          description:
                            Quantity outstanding and total quantity concatenated
                            with forward slash separator
                        orderDesc:
                          type: string
                          description: Order description
                        description1:
                          type: string
                          description: Formatted ticker description
                        ticker:
                          type: string
                          description: Underlying symbol
                        secType:
                          type: string
                          description: Asset class
                        listingExchange:
                          type: string
                          description: Listing Exchange
                        remainingQuantity:
                          type: number
                          description: Quantity remaining
                        filledQuantity:
                          type: number
                          description: Quantity filled
                        companyName:
                          type: string
                          description: Company Name
                        status:
                          type: string
                          description: Status of the order
                        origOrderType:
                          type: string
                          description: Original order type
                        supportsTaxOpt:
                          type: number
                          description:
                            Supports Tax Optimization with 0 for no and
                            1 for yes
                        lastExecutionTime:
                          type: number
                          description:
                            Last status update in format YYMMDDhhmms based
                            in GMT
                        lastExecutionTime_r:
                          type: number
                          description: Last status update unix time in ms
                        orderType:
                          type: string
                          description: Order type
                        order_ref:
                          type: string
                          description: Order reference
                        side:
                          type: string
                          description: Side of order
                        timeInForce:
                          type: string
                          description: Time in force
                        price:
                          type: number
                          description: Price of order
                        bgColor:
                          type: string
                          description: background color in hex format
                        fgColor:
                          type: string
                          description: foreground color in hex format
                  snapshot:
                    type: boolean
                    description: If live order update is a snapshot
      x-codegen-request-body-name: body
  /iserver/account/{accountId}/order:
    post:
      tags:
        - Order
      summary: Place Order
      description: |
        Please note here, sometimes this endpoint alone can't make sure you submit the order successfully,
        you could receive some questions in the response, you have to to answer them in order to submit the order
        successfully. You can use "/iserver/reply/{replyid}" endpoint to answer questions
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      requestBody:
        description: order request info
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/order-request"
        required: true
      responses:
        200:
          description: returns an array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    message:
                      type: array
                      description: |
                        Please note here, if the message is a question, you have to reply to question in order to submit
                        the order successfully. See more in the "/iserver/reply/{replyid}" endpoint.
                      items:
                        type: string
      x-codegen-request-body-name: body
  /iserver/account/{accountId}/orders:
    post:
      tags:
        - Order
      summary: Place Orders (Support bracket orders)
      description: |
        You can pass a list of orders here
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      requestBody:
        description: order request info
        content:
          "*/*":
            schema:
              type: object
              properties:
                orders:
                  type: array
                  description: |
                    Notes for bracket orders: 1. Children orders will not have its own "cOID", so please donot pass "cOID"
                    parameter in child order.Instead, they will have a "parentId" which must be equal to "cOID" of parent.
                    2. When you cancel a parent order, it will cancel all bracket orders, when you cancel one child order,
                    it will also cancel its sibling order.
                  items:
                    $ref: "#/components/schemas/order-request"
        required: true
      responses:
        200:
          description: returns an array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    message:
                      type: array
                      description: |
                        Please note here, if the message is a question, you have to reply to question in order to submit
                        the order successfully. See more in the "/iserver/reply/{replyid}" endpoint.
                      items:
                        type: string
      x-codegen-request-body-name: body
  /iserver/account/orders/{faGroup}:
    post:
      tags:
        - Order
      summary: Place Orders for Financial Advisor Groups
      description: |
        Financial Advisors can use this endpoint to place an order for a specified group. To place an order for a specified account use the endpoint /iserver/account/{accountId}/order.
        More information about groups can be found in the [TWS Users' Guide:](https://guides.interactivebrokers.com/twsguide/twsguide.htm#usersguidebook/financialadvisors/create_an_account_group_for_share_allocation.htm).
      parameters:
        - name: faGroup
          in: path
          description: financial advisor group
          required: true
          schema:
            type: string
      requestBody:
        description: order request info
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/order-request"
        required: true
      responses:
        200:
          description: returns an array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    message:
                      type: array
                      description: |
                        Please note here, if the message is a question, you have to reply to question in order to submit
                        the order successfully. See more in the "/iserver/reply/{replyid}" endpoint.
                      items:
                        type: string
      x-codegen-request-body-name: body
  /iserver/reply/{replyid}:
    post:
      tags:
        - Order
      summary: Place Order Reply
      description: Reply to questions when placing orders and submit orders
      parameters:
        - name: replyid
          in: path
          description: Please use the "id" from the response of "Place Order" endpoint
          required: true
          schema:
            type: string
      requestBody:
        description: Answer to question
        content:
          "*/*":
            schema:
              type: object
              properties:
                confirmed:
                  type: boolean
                  description: answer to question, true means yes, false means no
        required: true
      responses:
        200:
          description:
            Order is submitted successfully, returns an array contains
            one object
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    order_id:
                      type: string
                    order_status:
                      type: string
                    local_order_id:
                      type: string
        400:
          description:
            When you send "confirmed-false" in the request, you will receive
            this
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: for example-order not confirmed
                  statusCode:
                    type: integer
      x-codegen-request-body-name: body
  /iserver/account/{accountId}/order/whatif:
    post:
      tags:
        - Order
      summary: Preview Order
      description: |
        This endpoint allows you to preview order without actually submitting the order and you can get
        commission information in the response.
      parameters:
        - name: accountId
          in: path
          description: account id
          required: true
          schema:
            type: string
      requestBody:
        description: order info
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/order-request"
        required: true
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: object
                    properties:
                      amount:
                        type: string
                        description: for example 23,000 USD
                      commission:
                        type: string
                        description: for example 1.1 ... 1.2 USD
                      total:
                        type: string
                  equity:
                    type: object
                    properties:
                      current:
                        type: string
                      change:
                        type: string
                      after:
                        type: string
                  initial:
                    type: object
                    properties:
                      current:
                        type: string
                      change:
                        type: string
                      after:
                        type: string
                  maintenance:
                    type: object
                    properties:
                      current:
                        type: string
                      change:
                        type: string
                      after:
                        type: string
                  warn:
                    type: string
                  error:
                    type: string
      x-codegen-request-body-name: body
  /iserver/account/{accountId}/order/{orderId}:
    post:
      tags:
        - Order
      summary: Modify Order
      description:
        Modifies an open order. Must call /iserver/accounts endpoint prior
        to modifying an order. Use /iservers/account/orders endpoint to review open-order(s).
      parameters:
        - name: accountId
          in: path
          description: account id, or fa group if modifying a group order
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description:
            Customer order id, use /iservers/account/orders endpoint to query
            orderId.
          required: true
          schema:
            type: string
      requestBody:
        description: modify-order request
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/modify-order"
        required: true
      responses:
        200:
          description: returns an array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    order_id:
                      type: string
                    local_order_id:
                      type: string
                    order_status:
                      type: string
      x-codegen-request-body-name: body
    delete:
      tags:
        - Order
      summary: Cancel Order
      description:
        Cancels an open order. Must call /iserver/accounts endpoint prior
        to cancelling an order. Use /iservers/account/orders endpoint to review open-order(s)
        and get latest order status.
      parameters:
        - name: accountId
          in: path
          description: account id, or fa group if deleting a group order
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description:
            Customer order id, use /iservers/account/orders endpoint to query
            orderId.
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            returns an object with order id, message, conid and account
            id
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: string
                  msg:
                    type: string
                  conid:
                    type: integer
                  account:
                    type: string
  /iserver/marketdata/snapshot:
    get:
      tags:
        - Market Data
      summary: Market Data
      description:
        "Get Market Data for the given conid(s). The endpoint will return\
        \ by default bid, ask, last, change, change pct, close, listing exchange.\n\
        See response fields for a list of available fields that can be request via\
        \ fields argument.\nThe endpoint /iserver/accounts must be called prior to\
        \ /iserver/marketdata/snapshot.\nFor derivative contracts the endpoint /iserver/secdef/search\
        \ must be called first.\nFirst /snapshot endpoint call for given conid will\
        \ initiate the market data request. \nTo receive all available fields the\
        \ /snapshot endpoint will need to be called several times.\nTo receive streaming\
        \ market data the endpoint /ws can be used. Refer to [Streaming WebSocket\
        \ Data](https://interactivebrokers.github.io/cpwebapi/RealtimeSubscription.html)\
        \ for details.\n"
      parameters:
        - name: conids
          in: query
          description: list of conids separated by comma
          required: true
          schema:
            type: string
        - name: since
          in: query
          description:
            time period since which updates are required. uses epoch time
            with milliseconds.
          schema:
            type: integer
        - name: fields
          in: query
          description: list of fields separated by comma
          schema:
            type: string
      responses:
        200:
          description: Returns an array of objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    server_id:
                      type: string
                    conid:
                      type: integer
                    _updated:
                      type: integer
                    31:
                      type: string
                      description: Last Price
                    55:
                      type: string
                      description: Symbol
                    58:
                      type: string
                      description: Text
                    70:
                      type: string
                      description: High
                    71:
                      type: string
                      description: Low
                    72:
                      type: string
                      description: Position
                    73:
                      type: string
                      description: Market Value
                    74:
                      type: string
                      description: Average Price
                    75:
                      type: string
                      description: Unrealized PnL
                    76:
                      type: string
                      description: Formatted position
                    77:
                      type: string
                      description: Formatted Unrealized PnL
                    78:
                      type: string
                      description: Daily PnL
                    82:
                      type: string
                      description: Change Price
                    83:
                      type: string
                      description: Change Percent
                    84:
                      type: string
                      description: Bid Price
                    85:
                      type: string
                      description: Ask Size
                    86:
                      type: string
                      description: Ask Price
                    87:
                      type: string
                      description: Volume
                    88:
                      type: string
                      description: Bid Size
                    6004:
                      type: string
                      description: Exchange
                    6008:
                      type: string
                      description: Conid
                    6070:
                      type: string
                      description: Security Type
                    6072:
                      type: string
                      description: Months
                    6073:
                      type: string
                      description: Regular Expiry
                    6119:
                      type: string
                      description:
                        Marker for market data delivery method (similar
                        to request id)
                    6457:
                      type: string
                      description:
                        Underlying Conid. Use /trsrv/secdef to get more
                        information about the security
                    6509:
                      type: string
                      description: |
                        Market Data Availability. The field may contain two chars. The first char is the primary code: R = Realtime, D = Delayed,
                        Z = Frozen, Y = Frozen Delayed. The second char is the secondary code: P = Snapshot Available, p = Consolidated.
                    7051:
                      type: string
                      description: Company name
                    7059:
                      type: string
                      description: Last Size
                    7094:
                      type: string
                      description: Conid + Exchange
                    7219:
                      type: string
                      description: Contract Description
                    7220:
                      type: string
                      description: Contract Description
                    7221:
                      type: string
                      description: Listing Exchange
                    7280:
                      type: string
                      description: Industry
                    7281:
                      type: string
                      description: Category
                    7282:
                      type: string
                      description: Average Daily Volume
                    7633:
                      type: string
                      description: Implied volatility of the option
                    7284:
                      type: string
                      description: Historic Volume (30d)
                    7285:
                      type: string
                      description: Put/Call Ratio
                    7286:
                      type: string
                      description: Dividend Amount
                    7287:
                      type: string
                      description: Dividend Yield %
                    7288:
                      type: string
                      description: Ex-date of the dividend
                    7289:
                      type: string
                      description: Market Cap
                    7290:
                      type: string
                      description: P/E
                    7291:
                      type: string
                      description: EPS
                    7292:
                      type: string
                      description: Cost Basis
                    7293:
                      type: string
                      description: 52 Week High
                    7294:
                      type: string
                      description: 52 Week Low
                    7295:
                      type: string
                      description: Open Price
                    7296:
                      type: string
                      description: Close Price
                    7308:
                      type: string
                      description: Delta
                    7309:
                      type: string
                      description: Gamma
                    7310:
                      type: string
                      description: Theta
                    7311:
                      type: string
                      description: Vega
        400:
          description: sent when accounts are not queried before sending this request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: integer
  /iserver/marketdata/{conid}/unsubscribe:
    get:
      tags:
        - Market Data
      summary: Market Data Cancel (Single)
      description: |
        Cancel market data for given conid. To cancel all market data request(s), see /iserver/marketdata/unsubscribeall.
      parameters:
        - name: conid
          in: path
          description: contract id
          required: true
          schema:
            type: string
      responses:
        200:
          description: confirms market data for conid is canceled
          content:
            application/json:
              schema:
                type: object
                properties:
                  confirmed:
                    type: string
                    description: success means market data was canceled.
        500:
          description: cancel failed
          content: {}
  /iserver/marketdata/unsubscribeall:
    get:
      tags:
        - Market Data
      summary: Market Data Cancel (All)
      description:
        "Cancel all market data request(s). To cancel market data for given\
        \ conid, see /iserver/marketdata/{conid}/unsubscribe. \n"
      responses:
        200:
          description: confirms market data is canceled
          content:
            application/json:
              schema:
                type: object
                properties:
                  confirmed:
                    type: boolean
                    description:
                      true means market data is canceled, false means it
                      is not.
  /iserver/marketdata/history:
    get:
      tags:
        - Market Data
      summary: Market Data History
      description: |
        Get historical market Data for given conid, length of data is controlled by 'period' and 'bar'.
        Formatted as: min=minute, h=hour, d=day, w=week, m=month, y=year
        e.g. period =1y with bar =1w returns 52 data points (Max of 1000 data points supported).
        **Note**: There's a limit of 5 concurrent requests. Excessive requests will return a 'Too many requests' status 429 response.
      parameters:
        - name: conid
          in: query
          description: contract id
          required: true
          schema:
            type: string
        - name: exchange
          in: query
          description:
            Exchange of the conid (e.g. ISLAND, NYSE, etc.). Default value
            is empty which corresponds to primary exchange of the conid.
          schema:
            type: string
        - name: period
          in: query
          description:
            available time period-- {1-30}min, {1-8}h, {1-1000}d, {1-792}w,
            {1-182}m, {1-15}y
          required: true
          schema:
            type: string
        - name: bar
          in: query
          description:
            possible value-- 1min, 2min, 3min, 5min, 10min, 15min, 30min,
            1h, 2h, 3h, 4h, 8h, 1d, 1w, 1m
          schema:
            type: string
        - name: outsideRth
          in: query
          description:
            For contracts that support it, will determine if historical data
            includes outside of regular trading hours.
          schema:
            type: boolean
      responses:
        200:
          description: Returns an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/history-data"
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: System Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/system-error"
  /iserver/contract/{conid}/info:
    get:
      tags:
        - Contract
      summary: Contract Details
      description:
        Using the Contract Identifier get contract info. You can use this
        to prefill your order before you submit an order
      parameters:
        - name: conid
          in: path
          description: contract id
          required: true
          schema:
            type: string
      responses:
        200:
          description: returns an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contract"
  /iserver/secdef/search:
    post:
      tags:
        - Contract
      summary: Search by symbol or name
      description:
        Specify an underlying to search what derivative contract(s) it
        has. This endpoint must be called before using /secdef/info
      requestBody:
        description: Symbol or Company Name to be searched
        content:
          "*/*":
            schema:
              required:
                - symbol
              type: object
              properties:
                symbol:
                  type: string
                  description: symbol or name to be searched
                name:
                  type: boolean
                  description:
                    should be true if the search is to be performed by
                    name. false by default.
                secType:
                  type: string
                  description:
                    If search is done by name, only the assets provided
                    in this field will be returned. Currently, only STK is supported.
        required: true
      responses:
        200:
          description: returns an array of results
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    conid:
                      type: integer
                      description: Contract Identifier
                    companyHeader:
                      type: string
                      description: Company Name - Exchange
                    companyName:
                      type: string
                    symbol:
                      type: string
                    description:
                      type: string
                      description: Exchange
                    restricted:
                      type: string
                    fop:
                      type: string
                    opt:
                      type: string
                    war:
                      type: string
                    sections:
                      type: array
                      items:
                        type: object
                        properties:
                          secType:
                            type: string
                            description: Asset Class
                          months:
                            type: string
                            description:
                              List of expiration month(s) and year(s) in
                              MMMYY format separated by semicolon
                          symbol:
                            type: string
                          exchange:
                            type: string
                            description: Listing Exchange
                          legSecType:
                            type: string
                            description:
                              For combo's defines the asset class for each
                              leg
        500:
          description: error while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      x-codegen-request-body-name: symbol
  /iserver/secdef/strikes:
    get:
      tags:
        - Contract
      summary: Get strikes for Options/Warrant
      description: You can get available contract months and exchanges from "/iserver/secdef/search"
      parameters:
        - name: conid
          in: query
          description: contract id
          required: true
          schema:
            type: string
        - name: sectype
          in: query
          description: OPT/WAR
          required: true
          schema:
            type: string
        - name: month
          in: query
          description: contract month
          required: true
          schema:
            type: string
        - name: exchange
          in: query
          description: optional, default is SMART
          schema:
            type: string
      responses:
        200:
          description: returns an object contains call/put strike prices
          content:
            application/json:
              schema:
                type: object
                properties:
                  call:
                    type: array
                    items:
                      type: string
                      example: ""
                  put:
                    type: array
                    items:
                      type: string
                      example: ""
        500:
          description: error while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /iserver/secdef/info:
    get:
      tags:
        - Contract
      summary: Get available conids of future/option/warrant/cash/CFD
      description:
        For option and warrant, you can get strike price from "/iserver/secdef/strikes"
        endpoint. Must call /secdef/search for the underlying contract first.
      parameters:
        - name: conid
          in: query
          description: underlying contract id
          required: true
          schema:
            type: string
        - name: sectype
          in: query
          description: FUT/OPT/WAR/CASH/CFD
          required: true
          schema:
            type: string
        - name: month
          in: query
          description:
            contract month, only required for FUT/OPT/WAR in the format MMMYY,
            example JAN00
          schema:
            type: string
        - name: exchange
          in: query
          description: optional, default is SMART
          schema:
            type: string
        - name: strike
          in: query
          description: optional, only required for OPT/WAR
          schema:
            type: string
        - name: right
          in: query
          description: C for call, P for put
          schema:
            type: string
      responses:
        200:
          description: returns an array of objects
          content:
            application/json:
              schema:
                type: object
        500:
          description: error while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /iserver/scanner/params:
    get:
      tags:
        - Scanner
      summary: get lists of available scanners
      description:
        Returns an object contains four lists contain all parameters for
        scanners
      responses:
        200:
          description: An object contains lists
          content:
            application/json:
              schema:
                type: object
                properties:
                  scan_type_list:
                    type: array
                    items:
                      type: object
                      properties:
                        display_name:
                          type: string
                        code:
                          type: string
                        instruments:
                          type: array
                          items:
                            type: string
                            description: type of instrument
                  instrument_list:
                    type: array
                    items:
                      type: object
                      properties:
                        display_name:
                          type: string
                        type:
                          type: string
                        filters:
                          type: array
                          items:
                            type: string
                            description: code of filter
                  filter_list:
                    type: array
                    items:
                      type: object
                      properties:
                        group:
                          type: string
                        display_name:
                          type: string
                        code:
                          type: string
                        type:
                          type: string
                  location_tree:
                    type: array
                    items:
                      type: object
                      properties:
                        display_name:
                          type: string
                        type:
                          type: string
                        locations:
                          type: array
                          items:
                            type: object
                            properties:
                              display_name:
                                type: string
                              type:
                                type: string
  /iserver/scanner/run:
    post:
      tags:
        - Scanner
      summary: run scanner to get a list of contracts
      requestBody:
        description: scanner-params request
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/scanner-params"
        required: true
      responses:
        200:
          description: returns an array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    server_id:
                      type: string
                    column_name:
                      type: string
                    symbol:
                      type: string
                    conidex:
                      type: string
                    con_id:
                      type: number
                    available_chart_periods:
                      type: string
                    company_name:
                      type: string
                    contract_description_1:
                      type: string
                    listing_exchange:
                      type: string
                    sec_type:
                      type: string
      x-codegen-request-body-name: body
  /iserver/account/pnl/partitioned:
    get:
      tags:
        - PnL
        - Account
      summary: PnL for the selected account
      description: |
        Returns an object containing PnL for the selected account and its models (if any).
        To receive streaming PnL the endpoint /ws can be used. Refer to [Streaming WebSocket Data](https://interactivebrokers.github.io/cpwebapi/RealtimeSubscription.html) for details.
      responses:
        200:
          description: An object containing account and model(s) pnl
          content:
            application/json:
              schema:
                type: object
                properties:
                  acctId:
                    type: object
                    properties: {}
  /trsrv/secdef:
    post:
      tags:
        - Contract
      summary: Secdef by Conid
      description: Returns a list of security definitions for the given conids
      requestBody:
        description: request body
        content:
          "*/*":
            schema:
              type: object
              properties:
                conids:
                  type: array
                  items:
                    type: integer
                    description: contract id
        required: true
      responses:
        200:
          description: returns an array of secdef info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/secdefs"
      x-codegen-request-body-name: body
  /trsrv/secdef/schedule:
    get:
      tags:
        - Contract
      summary: Get trading schedule for symbol
      description: Returns the trading schedule up to a month for the requested contract
      parameters:
        - name: assetClass
          in: query
          description: |
            specify the asset class of the contract.
            Available values-- Stock: STK, Option: OPT, Future: FUT, Contract For Difference: CFD, Warrant: WAR, Forex: SWP, Mutual Fund: FND, Bond: BND, Inter-Commodity Spreads: ICS
          required: true
          schema:
            type: string
        - name: symbol
          in: query
          description:
            Underlying Symbol for specified contract, for example 'AAPL'
            for US Stock - Apple Inc.
          required: true
          schema:
            type: string
        - name: exchange
          in: query
          description:
            Native exchange for contract, for example 'NASDAQ' for US Stock
            - Apple Inc.
          schema:
            type: string
      responses:
        200:
          description: Returns an object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  tradeVenueId:
                    type: string
                    description: null is returned.
                  schedules:
                    type: array
                    description:
                      Always contains at least one 'tradingTime'  and zero
                      or more 'sessionTime' tags
                    items:
                      type: object
                      properties:
                        clearingCycleEndTime:
                          type: integer
                        tradingScheduleDate:
                          type: integer
                          description:
                            20000101 stands for any Sat, 20000102 stands
                            for any Sun, ... 20000107 stands for any Fri. Any other
                            date stands for itself.
                        sessions:
                          type: object
                          properties:
                            openingTime:
                              type: integer
                            closingTime:
                              type: integer
                            prop:
                              type: string
                              description:
                                If the whole trading day is considered
                                LIQUID then the value 'LIQUID' is returned.
                          description:
                            If the LIQUID hours differs from the total
                            trading day then a separate 'session' tag is returned.
                        tradingTimes:
                          type: object
                          properties:
                            openingTime:
                              type: integer
                            closingTime:
                              type: integer
                            cancelDayOrders:
                              type: string
                          description: Returns tradingTime in exchange time zone.
  /trsrv/futures:
    get:
      tags:
        - Contract
      summary: Security Futures by Symbol
      description: Returns a list of non-expired future contracts for given symbol(s)
      parameters:
        - name: symbols
          in: query
          description: list of case-sensitive symbols separated by comma
          required: true
          schema:
            type: string
      responses:
        200:
          description: returns an object with symbol and and array of its future contracts
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol:
                    $ref: "#/components/schemas/futures"
        500:
          description: error while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /trsrv/stocks:
    get:
      tags:
        - Contract
      summary: Security Stocks by Symbol
      description: Returns an object contains all stock contracts for given symbol(s)
      parameters:
        - name: symbols
          in: query
          description: list of upper-sensitive symbols separated by comma
          required: true
          schema:
            type: string
      responses:
        200:
          description: returns an object with symbols
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol:
                    $ref: "#/components/schemas/stocks"
        500:
          description: error while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    notifications:
      type: array
      items:
        $ref: "#/components/schemas/notification"
    notification:
      type: object
      properties:
        D:
          type: string
          description: notification date
        ID:
          type: string
          description: unique way to reference this notification
        FC:
          type: string
          description: FYI code, we can use it to find whether the disclaimer is
            accepted or not in settings
        MD:
          type: string
          description: content of notification
        MS:
          type: string
          description: title of notification
        R:
          type: string
          description: 0-unread, 1-read
      description: notification
    performance:
      type: object
      properties:
        id:
          type: string
        cps:
          type: object
          properties:
            dates:
              type: array
              description:
                array of dates, the length should be same as the length
                of returns inside data.
              items:
                type: string
                description: format-- yyyyMMdd
            freq:
              type: string
              description: D means Day
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  idType:
                    type: string
                    description: for example-- acctid
                  start:
                    type: string
                    description: start date-- yyyyMMdd
                  baseCurrency:
                    type: string
                  returns:
                    type: array
                    description:
                      each value stands for price change percent of corresponding
                      date in dates array
                    items:
                      type: number
                  end:
                    type: string
                    description: end date-- yyyyMMdd
          description: Cumulative performance data
        tpps:
          type: object
          properties:
            dates:
              type: array
              description:
                array of dates, the length should be same as the length
                of returns inside data.
              items:
                type: string
                description: format-- yyyyMMdd
            freq:
              type: string
              description: M means Month
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  idType:
                    type: string
                    description: for example-- acctid
                  start:
                    type: string
                    description: start date-- yyyyMMdd
                  baseCurrency:
                    type: string
                  returns:
                    type: array
                    description:
                      each value stands for price change percent of corresponding
                      date in dates array
                    items:
                      type: number
                  end:
                    type: string
                    description: end date-- yyyyMMdd
          description: Time period performance data
        nav:
          type: object
          properties:
            dates:
              type: array
              description:
                array of dates, the length should be same as the length
                of returns inside data.
              items:
                type: string
                description: format--yyyyMMdd
            freq:
              type: string
              description: D means Day
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  idType:
                    type: string
                    description: for example-- acctid
                  start:
                    type: string
                    description: start date-- yyyyMMdd
                  baseCurrency:
                    type: string
                  returns:
                    type: array
                    description:
                      each value stands for price change percent of corresponding
                      date in dates array
                    items:
                      type: number
                  end:
                    type: string
                    description: end date-- yyyyMMdd
          description:
            Net asset value data for the account or consolidated accounts.
            NAV data is not applicable to benchmarks.
        pm:
          type: string
        included:
          type: array
          items:
            type: string
            description: account id
        currencyType:
          type: string
        rc:
          type: integer
    summary:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
        isNull:
          type: boolean
        timestamp:
          type: integer
        value:
          type: string
    transactions:
      type: object
      properties:
        id:
          type: string
          description: will always be getTransactions
        currency:
          type: string
          description: same as request
        includesRealTime:
          type: boolean
          description:
            Indicates whether current day and realtime data is included
            in the result
        from:
          type: number
          description: Period start date. Epoch time, GMT
        to:
          type: number
          description: Period end date. Epoch time, GMT
        transactions:
          type: array
          description: Sorted by date descending
          items:
            $ref: "#/components/schemas/transaction"
      description: account transactions
    transaction:
      type: object
      properties:
        acctid:
          type: string
        conid:
          type: number
        cur:
          type: string
          description: currency code
        fxRate:
          type: number
          description: Conversion rate from asset currency to response currency
        desc:
          type: string
          description: Transaction description
        date:
          type: string
          description: Date of transaction.  Epoch time, GMT
        type:
          type: string
          description: |
            Transaction Type Name: Examples: "Sell", "Buy", "Corporate Action",
            "Dividend Payment", "Transfer", "Payment in Lieu"
            Dividends and Transfers do not have price and quantity in response
        qty:
          type: number
          description: Not applicable for all transaction types
        pr:
          type: number
          description: In asset currency. Not be applicable for all transaction
            types.
        amt:
          type: number
          description: |-
            Raw value, no formatting. Net transaction amount (may include commission, tax).
            In asset currency
    history-result:
      type: object
      properties:
        bars:
          type: object
          properties:
            open:
              type: number
            high:
              type: number
            low:
              type: number
            close:
              type: number
            volume:
              type: number
            time:
              type: string
            endTime:
              type: string
            weightedAvg:
              type: number
            count:
              type: number
    stats-data:
      type: object
      properties:
        Conid:
          type: number
        Exchange:
          type: string
        V:
          type: number
        T:
          type: number
        TT:
          type: number
        P:
          type: string
          description:
            Object, payload depends on event type. See confluence page
            for IGEvntUpd.
    market-data:
      type: object
      properties:
        Conid:
          type: number
          description: IBKR Contract ID
        Exchange:
          type: string
          description: Exchange
        minTick:
          type: number
        Last:
          type: number
        LastSize:
          type: number
        Bid:
          type: number
        BidSize:
          type: number
        Ask:
          type: number
        AskSize:
          type: number
    scanner-params:
      type: object
      properties:
        instrument:
          type: string
          description: for example-STK
        type:
          type: string
          description: for example-TOP_PERC_GAIN
        filter:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              value:
                type: number
        location:
          type: string
        size:
          type: string
    scanner-result:
      type: object
      properties:
        total:
          type: integer
        size:
          type: integer
        offset:
          type: integer
        scanTime:
          type: string
        id:
          type: number
        position:
          type: string
        Contracts:
          type: object
          properties:
            Contract:
              type: array
              items:
                type: object
                properties:
                  inScanTime:
                    type: string
                  distance:
                    type: integer
                  contractID:
                    type: integer
          description: Contains list of contracts matching the scanner query
    positions:
      type: array
      items:
        $ref: "#/components/schemas/position"
    position:
      type: object
      properties:
        acctId:
          type: string
        conid:
          type: integer
        contractDesc:
          type: string
        assetClass:
          type: string
        position:
          type: number
        mktPrice:
          type: number
        mktValue:
          type: number
        currency:
          type: string
        avgCost:
          type: number
        avgPrice:
          type: number
        realizedPnl:
          type: number
        unrealizedPnl:
          type: number
        exchs:
          type: string
        expiry:
          type: string
        putOrCall:
          type: string
        multiplier:
          type: number
        strike:
          type: number
        exerciseStyle:
          type: string
        undConid:
          type: integer
        conExchMap:
          type: array
          items:
            type: string
        baseMktValue:
          type: number
        baseMktPrice:
          type: number
        baseAvgCost:
          type: number
        baseAvgPrice:
          type: number
        baseRealizedPnl:
          type: number
        baseUnrealizedPnl:
          type: number
        name:
          type: string
        lastTradingDay:
          type: string
        group:
          type: string
        sector:
          type: string
        sectorGroup:
          type: string
        ticker:
          type: string
        undComp:
          type: string
        undSym:
          type: string
        fullName:
          type: string
        pageSize:
          type: integer
        model:
          type: string
      description: Account Information
    allocations:
      type: array
      items:
        $ref: "#/components/schemas/allocation"
    allocation:
      type: object
      properties:
        assetClass:
          type: object
          properties:
            long:
              type: object
              properties:
                STK:
                  type: number
                OPT:
                  type: number
                FUT:
                  type: number
                WAR:
                  type: number
                BOND:
                  type: number
                CASH:
                  type: number
              description: long positions allocation
            short:
              type: object
              properties:
                STK:
                  type: number
                OPT:
                  type: number
                FUT:
                  type: number
                WAR:
                  type: number
                BOND:
                  type: number
                CASH:
                  type: number
              description: short positions allocation
          description: portfolio allocation by asset class
        sector:
          type: object
          properties:
            long:
              type: object
              properties:
                Others:
                  type: number
                Utilities:
                  type: number
                Energy:
                  type: number
                Technology:
                  type: number
                Financial:
                  type: number
                Communications:
                  type: number
              description: long positions allocation
            short:
              type: object
              properties:
                Industrial:
                  type: number
                Consumer:
                  type: number
                Diversified:
                  type: number
              description: short positions allocation
          description: portfolio allocation by sector
        group:
          type: object
          properties:
            long:
              type: object
              properties:
                Computers:
                  type: number
                Semiconductors:
                  type: number
                Others:
                  type: number
                Chemicals:
                  type: number
                Apparel:
                  type: number
                Communications:
                  type: number
              description: long positions allocation
            short:
              type: object
              properties:
                Banks:
                  type: number
                Airlines:
                  type: number
                Internet:
                  type: number
              description: short positions allocation
          description: portfolio allocation by group
      description: allocation
    accounts:
      type: array
      items:
        $ref: "#/components/schemas/account"
    account:
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        accountVan:
          type: string
        accountTitle:
          type: string
        displayName:
          type: string
        accountAlias:
          type: string
        accountStatus:
          type: number
        currency:
          type: string
        type:
          type: string
        tradingType:
          type: string
        faclient:
          type: boolean
        parent:
          type: string
        desc:
          type: string
        covestor:
          type: boolean
        master:
          type: object
          properties:
            title:
              type: string
            officialTitle:
              type: string
      description: account information
    ledger:
      type: object
      properties:
        commoditymarketvalue:
          type: number
        futuremarketvalue:
          type: number
        settledcash:
          type: number
        exchangerate:
          type: number
        sessionid:
          type: integer
        cashbalance:
          type: number
        corporatebondsmarketvalue:
          type: number
        warrantsmarketvalue:
          type: number
        netliquidationvalue:
          type: number
        interest:
          type: number
        unrealizedpnl:
          type: number
        stockmarketvalue:
          type: number
        moneyfunds:
          type: number
        currency:
          type: string
        realizedpnl:
          type: number
        funds:
          type: number
        acctcode:
          type: string
        issueroptionsmarketvalue:
          type: number
        key:
          type: string
        timestamp:
          type: integer
        severity:
          type: integer
    calendar_request:
      type: object
      properties:
        date:
          type: object
          properties:
            start:
              type: string
              description: start date of a period. for example 20180808-0400
            end:
              type: string
              description: end date of a period. for example 20180808-0400
        filters:
          type: object
          properties:
            recently_held:
              type: string
              description: value can be 'true' or 'false'.
            corporate_earnings:
              type: string
              description: value can be 'true' or 'false'.
            DivExDates:
              type: string
              description: value can be 'true' or 'false'.
            ipo:
              type: string
              description: value can be 'true' or 'false'.
            splits:
              type: string
              description: value can be 'true' or 'false'.
            corporate_events:
              type: string
              description: value can be 'true' or 'false'.
            economic_events:
              type: string
              description: value can be 'true' or 'false'.
            option_show_monthly:
              type: string
              description: value can be 'true' or 'false'.
            option_show_weekly:
              type: string
              description: value can be 'true' or 'false'.
            country:
              type: string
              description: default is 'All'.
            limit:
              type: string
              description: default is '250'.
            limit_region:
              type: string
              description: default is '50'.
    events:
      type: array
      description: events
      items:
        $ref: "#/components/schemas/event"
    event:
      type: object
      properties:
        index_date_type:
          type: string
        event_type:
          type: string
        data:
          type: object
          properties: {}
          description: will be different for different event types
        conids:
          type: array
          items:
            type: string
            description: conid in string
        index_date:
          type: string
          description: for exmple 20180817T040000+0000
        source:
          type: string
          description: for example RSE
        event_key:
          type: string
          description: for example 11662135
        tooltips:
          type: object
          properties: {}
        status:
          type: string
    alert-request:
      type: object
      properties:
        orderId:
          type: integer
          description: |
            orderId is required when modifying alert. You can get it from /iserver/account/:accountId/alerts
        alertName:
          type: string
          description: name of alert
        alertMessage:
          type: string
          description: The message you want to receive via email or text message
        alertRepeatable:
          type: integer
          description:
            whether alert is repeatable or not, so value can only be 0
            or 1, this has to be 1 for MTA alert
        email:
          type: string
          description: email address to receive alert
        sendMessage:
          type: integer
          description: |
            whether allowing to send email or not, so value can only be 0 or 1,
        tif:
          type: string
          description: time in force, can only be GTC or GTD
        expireTime:
          type: string
          description: |
            format, YYYYMMDD-HH:mm:ss, please NOTE this will only work when tif is GTD
          example: 20201105-19:51:14
        outsideRth:
          type: integer
          description: |
            value can only be 0 or 1, set to 1 if the alert can be triggered outside regular trading hours.
        iTWSOrdersOnly:
          type: integer
          description: |
            value can only be 0 or 1, set to 1 to enable the alert only in IBKR mobile
        showPopup:
          type: integer
          description:
            value can only be 0 or 1, set to 1 to allow to show alert in
            pop-ups
        toolId:
          type: integer
          description: |
            for MTA alert only, each user has a unique toolId and it will stay the same, do not send for normal alert
        playAudio:
          type: string
          description: audio message to play when alert is triggered
        conditions:
          type: array
          items:
            type: object
            properties:
              type:
                type: integer
                description: |
                  Types: 1-Price, 3-Time, 4-Margin, 5-Trade, 6-Volume, 7: MTA market 8: MTA Position, 9: MTA Acc. Daily PN&
              conidex:
                type: string
                description: format, conid@exchange
                example: 8314@SMART
              operator:
                type: string
                description:
                  optional, operator for the current condition, can be
                  >= or <=
                example: ">="
              triggerMethod:
                type: string
                description: optional, only some type of conditions have triggerMethod
                example: "0"
              value:
                type: string
                description: can not be empty, can pass default value "*"
                example: "220"
              logicBind:
                type: string
                description: |
                  "a" means "AND", "o" means "OR", "n" means "END",
                  the last one condition in the condition array should "n"
              timeZone:
                type: string
                description: only needed for some MTA alert condition
    alert-response:
      type: object
      properties:
        account:
          type: string
          description: account id
        order_id:
          type: integer
        alert_name:
          type: string
          description: name of alert
        alert_message:
          type: string
          description: The message you want to receive via email or text message
        alert_active:
          type: integer
          description: whether alert is active or not, so value can only be 0 or 1
        alert_repeatable:
          type: integer
          description:
            whether alert is repeatable or not, so value can only be 0
            or 1
        alert_email:
          type: string
          description: email address to receive alert
        alert_send_message:
          type: integer
          description: |
            whether allowing to send email or not, so value can only be 0 or 1,
        tif:
          type: string
          description: time in force, can only be GTC or GTD
        expire_time:
          type: string
          description: |
            format, YYYYMMDD-HH:mm:ss
          example: 20201105-19:51:14
        order_status:
          type: string
          description: status of alert
          example: Submitted
        outsideRth:
          type: integer
          description: |
            value can only be 0 or 1, set to 1 if the alert can be triggered outside regular trading hours.
        itws_orders_only:
          type: integer
          description: |
            value can only be 0 or 1, set to 1 to enable the alert only in IBKR mobile
        alert_show_popup:
          type: integer
          description:
            value can only be 0 or 1, set to 1 to allow to show alert in
            pop-ups
        alert_triggered:
          type: boolean
          description: whether the alert has been triggered
        order_not_editable:
          type: boolean
          description: whether the alert can be edited
        tool_id:
          type: integer
          description: |
            for MTA alert only, each user has a unique toolId and it will stay the same, do not send for normal alert
        alert_play_audio:
          type: string
          description: audio message to play when alert is triggered
        alert_mta_currency:
          type: string
          description: MTA alert only
        alert_mta_defaults:
          type: string
          description: MTA alert only
        time_zone:
          type: string
          description: MTA alert only
        alert_default_type:
          type: string
          description: MTA alert only
        condition_size:
          type: integer
          description: size of conditions array
        condition_outside_rth:
          type: integer
          description:
            whether allowing the condition can be triggered outside of
            regular trading hours, 1 means allow
        conditions:
          type: array
          items:
            type: object
            properties:
              condition_type:
                type: integer
                description: |
                  Types: 1-Price, 3-Time, 4-Margin, 5-Trade, 6-Volume, 7: MTA market 8: MTA Position, 9: MTA Acc. Daily PN&
              conidex:
                type: string
                description: format, conid@exchange
                example: 8314@SMART
              contract_description_1:
                type: string
                example: FB Stock (NASDAQ.NMS)
              condition_operator:
                type: string
                description:
                  optional, operator for the current condition, can be
                  >= or <=
                example: ">="
              condition_trigger_method:
                type: string
                description: optional, only some type of conditions have triggerMethod
                example: "0"
              condition_value:
                type: string
                description: can not be empty, can pass default value "*"
                example: "220"
              condition_logic_bind:
                type: string
                description: |
                  "a" means "AND", "o" means "OR", "n" means "END",
                  the last one condition in the condition array should "n"
              condition_time_zone:
                type: string
                description: only needed for some MTA alert condition
    authStatus:
      type: object
      properties:
        authenticated:
          type: boolean
          description: Brokerage session is authenticated
        connected:
          type: boolean
          description: Connected to backend
        competing:
          type: boolean
          description:
            Brokerage session is competing, e.g. user is logged in to IBKR
            Mobile, WebTrader, TWS or other trading platforms.
        fail:
          type: string
          description: Authentication failed, why.
        message:
          type: string
          description: System messages that may affect trading
        prompts:
          type: array
          description: Prompt messages that may affect trading or the account
          items:
            type: string
    contract:
      type: object
      properties:
        r_t_h:
          type: boolean
          description: true means you can trade outside RTH(regular trading hours)
        con_id:
          type: string
          description: same as that in request
        exchange:
          type: string
        local_symbol:
          type: string
          description: for exmple FB
        instrument_type:
          type: string
          description: for example STK
        currency:
          type: string
        companyName:
          type: string
        category:
          type: string
        industry:
          type: string
        rules:
          type: object
          properties:
            orderTypes:
              type: array
              items:
                type: string
                description: store available order types for this contract
            orderTypesOutside:
              type: array
              items:
                type: string
                description:
                  store available order types for this contract outside
                  regular hours
            defaultSize:
              type: number
              description: default quantity you can use to place an order
            sizeIncrement:
              type: number
            tifTypes:
              type: array
              items:
                type: string
                description: store available time-in-force types
            limitPrice:
              type: number
              description: default limit price you can use to prefill your order
            stopprice:
              type: number
              description: default stop price you can use to prefill your order
            preview:
              type: boolean
              description: if you can preview the order or not with the whatif endpoint
            displaySize:
              type: string
            increment:
              type: string
      description:
        Contains all details of the contract, including rules you can use
        when placing orders
    secdef-info:
      type: object
      properties:
        conid:
          type: number
        symbol:
          type: string
          description: For example IBKR
        secType:
          type: string
        exchange:
          type: string
        listingExchange:
          type: string
        right:
          type: string
          description: C = Call Option, P = Put Option
        strike:
          type: string
          description: The strike price also known as exercise price
        currency:
          type: string
          description: Currency the contract trades in
        cusip:
          type: string
          description: Committee on Uniform Securities Identification Procedures number
        coupon:
          type: string
          description: Annual interest rate paid on a bond
        desc1:
          type: string
          description: Formatted symbol
        desc2:
          type: string
          description: Formatted expiration, strike and right
        maturityDate:
          type: string
          description:
            Format YYYYMMDD, the date on which the underlying transaction
            settles if the option is exercised
        multiplier:
          type: string
          description: total premium paid or received for an option contract
        tradingClass:
          type: string
        validExchanges:
          type: string
      description: Contains some basic info of contract
    history-data:
      type: object
      properties:
        symbol:
          type: string
          description: Underlying Symbol of the corresponding contract
        text:
          type: string
          description: companyName of the corresponding contract
        priceFactor:
          type: integer
          description: priceFactor is price increment obtained from display rule
          example: 100
        startTime:
          type: string
          description: start date time in the format YYYYMMDD-HH:mm:ss
        high:
          type: string
          description: |
            High value during this time series with format %h/%v/%t. %h is the high price (scaled by priceFactor), %v is volume
            (volume factor will always be 100 (reported volume = actual volume/100)) and %t is minutes from start time of the chart
        low:
          type: string
          description: |
            Low value during this time series with format %l/%v/%t. %l is the low price (scaled by priceFactor), %v is volume
            (volume factor will always be 100 (reported volume = actual volume/100)) and %t is minutes from start time of the chart
        timePeriod:
          type: string
          description: The duration for the historical data request
        barLength:
          type: integer
          description: The number of seconds in a bar
        mdAvailability:
          type: string
          description: |
            Market Data Availability. The field may contain two chars. The first char is the primary code: S = Streaming, R = Realtime, D = Delayed,
            Z = Frozen, Y = Frozen Delayed. The second char is the secondary code: P = Snapshot Available, p = Consolidated.
        mktDataDelay:
          type: integer
          description:
            The time it takes, in milliseconds, to process the historical
            data request
        outsideRth:
          type: boolean
          description: |
            The historical data returned includes outside of regular trading hours
        tradingDayDuration:
          type: integer
          description: The number of seconds in the trading day
        volumeFactor:
          type: integer
        priceDisplayRule:
          type: integer
        priceDisplayValue:
          type: string
        negativeCapable:
          type: boolean
        messageVersion:
          type: integer
        data:
          type: array
          items:
            type: object
            properties:
              o:
                type: number
                description: open price
              c:
                type: number
                description: close price
              h:
                type: number
                description: high price
              l:
                type: number
                description: low price
              v:
                type: number
                description: volume
              t:
                type: number
                description: unix time stamp
        points:
          type: integer
          description: total number of points
        travelTime:
          type: integer
    trade:
      type: object
      properties:
        execution_id:
          type: string
        symbol:
          type: string
        side:
          type: string
        order_description:
          type: string
        trade_time:
          type: string
        trade_time_r:
          type: number
        size:
          type: string
        price:
          type: string
        submitter:
          type: string
        exchange:
          type: string
        comission:
          type: number
        net_amount:
          type: number
        account:
          type: string
        company_name:
          type: string
        contract_description_1:
          type: string
        sec_type:
          type: string
        conidex:
          type: string
        position:
          type: string
        clearing_id:
          type: string
        clearing_name:
          type: string
        order_ref:
          type: string
          description:
            User defined string used to identify the order. Value is set
            using "cOID" field while placing an order.
    modify-order:
      type: object
      properties:
        acctId:
          type: string
        conid:
          type: integer
        orderType:
          type: string
          description: for example LMT
        outsideRTH:
          type: boolean
        price:
          type: number
        auxPrice:
          type: number
        side:
          type: string
          description: SELL or BUY
        listingExchange:
          type: string
          description: optional, not required
        ticker:
          type: string
        tif:
          type: string
          description: for example DAY
        quantity:
          type: number
          description: usually integer, for some special cases can be float numbers
    order-request:
      type: object
      properties:
        acctId:
          type: string
          description: |
            acctId is optional. It should be one of the accounts returned by
            /iserver/accounts. If not passed, the first one in the list is selected.
        conid:
          type: integer
          description: |
            conid is the identifier of the security you want to trade, you can find the
            conid with /iserver/secdef/search.
        secType:
          type: string
          description: conid:type for example 265598:STK
        cOID:
          type: string
          description: |
            Customer Order ID. An arbitraty string that can be used to identify the order, e.g "my-fb-order". The
            value must be unique for a 24h span. Please do not set this value for child orders when placing a bracket order.
        parentId:
          type: string
          description: |
            When placing bracket orders, the child parentId must be equal to the cOId (customer order id) of the parent.
        orderType:
          type: string
          description: |
            orderType can be one of MKT (Market), LMT (Limit), STP (Stop) or STP_LIMIT (stop limit)
        listingExchange:
          type: string
          description: |
            listingExchange is optional. By default we use "SMART" routing. Possible values are available via this end
            point: /v1/portal/iserver/contract/{{conid}}/info, see valid_exchange: e.g: SMART,AMEX,NYSE,
            CBOE,ISE,CHX,ARCA,ISLAND,DRCTEDGE,BEX,BATS,EDGEA,CSFBALGO,JE FFALGO,BYX,IEX,FOXRIVER,TPLUS1,NYSENAT,PSX
        outsideRTH:
          type: boolean
          description: |
            set to true if the order can be executed outside regular trading hours.
        price:
          type: number
          description: |
            optional if order is MKT, for LMT, this is the limit price. For STP this is the stop price.
        side:
          type: string
          description: SELL or BUY
        ticker:
          type: string
          description: ""
        tif:
          type: string
          description: |
            GTC (Good Till Cancel) or DAY. DAY orders are automatically cancelled at the end of the Day or Trading hours.
        referrer:
          type: string
          description: for example QuickTrade
        quantity:
          type: number
          description: usually integer, for some special cases can be float numbers
        fxQty:
          type: number
          description: |
            double number, this is the cash quantity field which can only be used for FX conversion order.
        useAdaptive:
          type: boolean
          description: |
            If true, the system will use the Adaptive Algo to submit the order
            https://www.interactivebrokers.com/en/index.php?f=19091
        isCurrencyConversion:
          type: boolean
          description: |
            set to true if the order is a FX conversion order
        allocationMethod:
          type: string
          description: |
            Set the allocation method when placing an order using an FA account for a group
            Possible allocation methods are "NetLiquidity", "AvailableEquity", "EqualQuantity" and "PctChange".
    order:
      type: object
      properties:
        acct:
          type: string
          description: account id
        conid:
          type: integer
        orderDesc:
          type: string
        description1:
          type: string
        ticker:
          type: string
          description: for exmple FB
        secType:
          type: string
          description: for example STK
        listingExchange:
          type: string
          description: for example NASDAQ.NMS
        remainingQuantity:
          type: string
        filledQuantity:
          type: string
        companyName:
          type: string
        status:
          type: string
          description:
            "PendingSubmit - Indicates the order was sent, but confirmation\
            \ has not been received that it has been received by the destination.\
            \ \n                Occurs most commonly if an exchange is closed.\nPendingCancel\
            \ - Indicates that a request has been sent to cancel an order but confirmation\
            \ has not been received of its cancellation. PreSubmitted - Indicates\
            \ that a simulated order type has been accepted by the IBKR system and\
            \ that this order has yet to be elected. \n               The order is\
            \ held in the IBKR system until the election criteria are met. At that\
            \ time the order is transmitted to the order destination as specified.\
            \ \nSubmitted - Indicates that the order has been accepted at the order\
            \ destination and is working. Cancelled - Indicates that the balance of\
            \ the order has been confirmed cancelled by the IB system. \n        \
            \    This could occur unexpectedly when IB or the destination has rejected\
            \ the order.  \nFilled - Indicates that the order has been completely\
            \ filled.  Inactive - Indicates the order is not working, for instance\
            \ if the order was invalid and triggered an error message,\n         \
            \  or if the order was to short a security and shares have not yet been\
            \ located. \n"
        origOrderType:
          type: string
          description: for example Limit
        side:
          type: string
          description: BUY or SELL
        price:
          type: number
        bgColor:
          type: string
          description: back-ground color
        fgColor:
          type: string
        orderId:
          type: integer
        parentId:
          type: integer
          description: Only exists in child order of bracket
        order_ref:
          type: string
          description:
            User defined string used to identify the order. Value is set
            using "cOID" field while placing an order.
      description: contains all the order related info
    set-account:
      type: object
      properties:
        acctId:
          type: string
          description: Account ID
    system-error:
      type: object
      properties:
        error:
          type: string
    wagers:
      type: array
      items:
        $ref: "#/components/schemas/wager"
        description: List of wagers
    wager:
      type: object
      properties:
        conid:
          type: number
        curr:
          type: string
        desc:
          type: string
        part:
          type: string
    inds:
      type: array
      items:
        $ref: "#/components/schemas/ind"
    ind:
      type: object
      properties:
        conid:
          type: number
    secdefs:
      type: array
      items:
        $ref: "#/components/schemas/secdef"
    secdef:
      type: object
      properties:
          conid:
            type: integer
          name:
            type: string
          assetClass:
            type: string
          expiry:
            type: string
          lastTradingDay:
            type: string
          group:
            type: string
          putOrCall:
            type: string
          sector:
            type: string
          sectorGroup:
            type: string
          strike:
            type: number
          ticker:
            type: string
          undConid:
            type: integer
          fullName:
            type: string
          pageSize:
            type: integer
      description: security definition information
    futures:
      type: array
      items:
        $ref: "#/components/schemas/future"
    future:
      type: object
      properties:
        symbol:
          type: string
        conid:
          type: integer
          description: conid of the future contract
        underlyingConid:
          type: integer
        expirationDate:
          type: string
        ltd:
          type: string
          description: last trading day
      description: future contract information
    stocks:
      type: array
      description: |
        This is an array of object(s), there could be multiple results under same symbol
      items:
        $ref: "#/components/schemas/stock"
    stock:
      type: object
      properties:
          name:
            type: string
            description: company name
          chineseName:
            type: string
            description: company name in Chinese
          assetClass:
            type: string
            example: STK
          contracts:
            type: array
            description: array of contracts from different exchanges
            items:
              type: object
              properties:
                conid:
                  type: integer
                  description: conid of the stock contract
                exchange:
                  type: string
                  example: NYSE
      description: future contract information
