//
// SecdefInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Contains some basic info of contract */

public struct SecdefInfo: Codable {

    public var conid: Double?
    /** For example IBKR */
    public var symbol: String?
    public var secType: String?
    public var exchange: String?
    public var listingExchange: String?
    /** C &#x3D; Call Option, P &#x3D; Put Option */
    public var _right: String?
    /** The strike price also known as exercise price */
    public var strike: String?
    /** Currency the contract trades in */
    public var currency: String?
    /** Committee on Uniform Securities Identification Procedures number */
    public var cusip: String?
    /** Annual interest rate paid on a bond */
    public var coupon: String?
    /** Formatted symbol */
    public var desc1: String?
    /** Formatted expiration, strike and right */
    public var desc2: String?
    /** Format YYYYMMDD, the date on which the underlying transaction settles if the option is exercised */
    public var maturityDate: String?
    /** total premium paid or received for an option contract */
    public var multiplier: String?
    public var tradingClass: String?
    public var validExchanges: String?

    public init(conid: Double?, symbol: String?, secType: String?, exchange: String?, listingExchange: String?, _right: String?, strike: String?, currency: String?, cusip: String?, coupon: String?, desc1: String?, desc2: String?, maturityDate: String?, multiplier: String?, tradingClass: String?, validExchanges: String?) {
        self.conid = conid
        self.symbol = symbol
        self.secType = secType
        self.exchange = exchange
        self.listingExchange = listingExchange
        self._right = _right
        self.strike = strike
        self.currency = currency
        self.cusip = cusip
        self.coupon = coupon
        self.desc1 = desc1
        self.desc2 = desc2
        self.maturityDate = maturityDate
        self.multiplier = multiplier
        self.tradingClass = tradingClass
        self.validExchanges = validExchanges
    }

    public enum CodingKeys: String, CodingKey { 
        case conid
        case symbol
        case secType
        case exchange
        case listingExchange
        case _right = "right"
        case strike
        case currency
        case cusip
        case coupon
        case desc1
        case desc2
        case maturityDate
        case multiplier
        case tradingClass
        case validExchanges
    }


}

