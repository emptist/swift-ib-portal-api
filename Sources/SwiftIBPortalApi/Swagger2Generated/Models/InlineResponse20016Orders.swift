//
// InlineResponse20016Orders.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct InlineResponse20016Orders: Codable {

    /** Account number */
    public var acct: String?
    /** Exchange or trading venue */
    public var exchange: String?
    /** Contract identifier */
    public var conid: Double?
    /** Order identifier */
    public var orderId: String?
    /** Cash currency */
    public var cashCcy: String?
    /** Quantity outstanding and total quantity concatenated with forward slash separator */
    public var sizeAndFills: Double?
    /** Order description */
    public var orderDesc: String?
    /** Formatted ticker description */
    public var description1: String?
    /** Underlying symbol */
    public var ticker: String?
    /** Asset class */
    public var secType: String?
    /** Listing Exchange */
    public var listingExchange: String?
    /** Quantity remaining */
    public var remainingQuantity: Double?
    /** Quantity filled */
    public var filledQuantity: Double?
    /** Company Name */
    public var companyName: String?
    /** Status of the order */
    public var status: String?
    /** Original order type */
    public var origOrderType: String?
    /** Supports Tax Optimization with 0 for no and 1 for yes */
    public var supportsTaxOpt: Double?
    /** Last status update in format YYMMDDhhmms based in GMT */
    public var lastExecutionTime: Double?
    /** Last status update unix time in ms */
    public var lastExecutionTimeR: Double?
    /** Order type */
    public var orderType: String?
    /** Order reference */
    public var orderRef: String?
    /** Side of order */
    public var side: String?
    /** Time in force */
    public var timeInForce: String?
    /** Price of order */
    public var price: Double?
    /** background color in hex format */
    public var bgColor: String?
    /** foreground color in hex format */
    public var fgColor: String?

    public init(acct: String?, exchange: String?, conid: Double?, orderId: String?, cashCcy: String?, sizeAndFills: Double?, orderDesc: String?, description1: String?, ticker: String?, secType: String?, listingExchange: String?, remainingQuantity: Double?, filledQuantity: Double?, companyName: String?, status: String?, origOrderType: String?, supportsTaxOpt: Double?, lastExecutionTime: Double?, lastExecutionTimeR: Double?, orderType: String?, orderRef: String?, side: String?, timeInForce: String?, price: Double?, bgColor: String?, fgColor: String?) {
        self.acct = acct
        self.exchange = exchange
        self.conid = conid
        self.orderId = orderId
        self.cashCcy = cashCcy
        self.sizeAndFills = sizeAndFills
        self.orderDesc = orderDesc
        self.description1 = description1
        self.ticker = ticker
        self.secType = secType
        self.listingExchange = listingExchange
        self.remainingQuantity = remainingQuantity
        self.filledQuantity = filledQuantity
        self.companyName = companyName
        self.status = status
        self.origOrderType = origOrderType
        self.supportsTaxOpt = supportsTaxOpt
        self.lastExecutionTime = lastExecutionTime
        self.lastExecutionTimeR = lastExecutionTimeR
        self.orderType = orderType
        self.orderRef = orderRef
        self.side = side
        self.timeInForce = timeInForce
        self.price = price
        self.bgColor = bgColor
        self.fgColor = fgColor
    }

    public enum CodingKeys: String, CodingKey { 
        case acct
        case exchange
        case conid
        case orderId
        case cashCcy
        case sizeAndFills
        case orderDesc
        case description1
        case ticker
        case secType
        case listingExchange
        case remainingQuantity
        case filledQuantity
        case companyName
        case status
        case origOrderType
        case supportsTaxOpt
        case lastExecutionTime
        case lastExecutionTimeR = "lastExecutionTime_r"
        case orderType
        case orderRef = "order_ref"
        case side
        case timeInForce
        case price
        case bgColor
        case fgColor
    }


}

