//
// AlertAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class AlertAPI {
    /**
     Activate or deactivate an alert
     
     - parameter accountId: (path) account id 
     - parameter body: (body) order request info 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func iserverAccountAccountIdAlertActivatePost(accountId: String, body: Body6, completion: @escaping ((_ data: InlineResponse20015?,_ error: Error?) -> Void)) {
        iserverAccountAccountIdAlertActivatePostWithRequestBuilder(accountId: accountId, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Activate or deactivate an alert
     - POST /iserver/account/{accountId}/alert/activate
     - Please note, if alertId is 0, it will activate/deactivate all alerts
     - examples: [{contentType=application/json, example={
  "order_status" : "order_status",
  "success" : true,
  "failure_list" : "failure_list",
  "text" : "text",
  "request_id" : 0,
  "order_id" : 6
}}]
     
     - parameter accountId: (path) account id 
     - parameter body: (body) order request info 

     - returns: RequestBuilder<InlineResponse20015> 
     */
    open class func iserverAccountAccountIdAlertActivatePostWithRequestBuilder(accountId: String, body: Body6) -> RequestBuilder<InlineResponse20015> {
        var path = "/iserver/account/{accountId}/alert/activate"
        let accountIdPreEscape = "\(accountId)"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{accountId}", with: accountIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20015>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete an alert
     
     - parameter accountId: (path) account id 
     - parameter alertId: (path) alert id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func iserverAccountAccountIdAlertAlertIdDelete(accountId: String, alertId: String, completion: @escaping ((_ data: InlineResponse20015?,_ error: Error?) -> Void)) {
        iserverAccountAccountIdAlertAlertIdDeleteWithRequestBuilder(accountId: accountId, alertId: alertId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Delete an alert
     - DELETE /iserver/account/{accountId}/alert/{alertId}
     - Please be careful, if alertId is 0, it will delete all alerts
     - examples: [{contentType=application/json, example={
  "order_status" : "order_status",
  "success" : true,
  "failure_list" : "failure_list",
  "text" : "text",
  "request_id" : 0,
  "order_id" : 6
}}]
     
     - parameter accountId: (path) account id 
     - parameter alertId: (path) alert id 

     - returns: RequestBuilder<InlineResponse20015> 
     */
    open class func iserverAccountAccountIdAlertAlertIdDeleteWithRequestBuilder(accountId: String, alertId: String) -> RequestBuilder<InlineResponse20015> {
        var path = "/iserver/account/{accountId}/alert/{alertId}"
        let accountIdPreEscape = "\(accountId)"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{accountId}", with: accountIdPostEscape, options: .literal, range: nil)
        let alertIdPreEscape = "\(alertId)"
        let alertIdPostEscape = alertIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{alertId}", with: alertIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20015>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create or modify alert
     
     - parameter accountId: (path) account id 
     - parameter body: (body) alert info 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func iserverAccountAccountIdAlertPost(accountId: String, body: AlertRequest, completion: @escaping ((_ data: InlineResponse20013?,_ error: Error?) -> Void)) {
        iserverAccountAccountIdAlertPostWithRequestBuilder(accountId: accountId, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create or modify alert
     - POST /iserver/account/{accountId}/alert
     - Please note here, DO NOT pass orderId when creating a new alert, toolId is only required for MTA alert 
     - examples: [{contentType=application/json, example={
  "warning_message" : "warning_message",
  "order_status" : "order_status",
  "success" : true,
  "text" : "text",
  "request_id" : 0,
  "order_id" : 6
}}]
     
     - parameter accountId: (path) account id 
     - parameter body: (body) alert info 

     - returns: RequestBuilder<InlineResponse20013> 
     */
    open class func iserverAccountAccountIdAlertPostWithRequestBuilder(accountId: String, body: AlertRequest) -> RequestBuilder<InlineResponse20013> {
        var path = "/iserver/account/{accountId}/alert"
        let accountIdPreEscape = "\(accountId)"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{accountId}", with: accountIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20013>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get a list of available alerts
     
     - parameter accountId: (path) account id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func iserverAccountAccountIdAlertsGet(accountId: String, completion: @escaping ((_ data: [InlineResponse20014]?,_ error: Error?) -> Void)) {
        iserverAccountAccountIdAlertsGetWithRequestBuilder(accountId: accountId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a list of available alerts
     - GET /iserver/account/{accountId}/alerts
     - The response will contain both active and inactive alerts, but it won't have MTA alert
     - examples: [{contentType=application/json, example=[ {
  "alert_repeatable" : 1,
  "order_time" : "order_time",
  "alert_active" : 6,
  "alert_triggered" : true,
  "order_id" : 0,
  "account" : "account",
  "alert_name" : "alert_name"
}, {
  "alert_repeatable" : 1,
  "order_time" : "order_time",
  "alert_active" : 6,
  "alert_triggered" : true,
  "order_id" : 0,
  "account" : "account",
  "alert_name" : "alert_name"
} ]}]
     
     - parameter accountId: (path) account id 

     - returns: RequestBuilder<[InlineResponse20014]> 
     */
    open class func iserverAccountAccountIdAlertsGetWithRequestBuilder(accountId: String) -> RequestBuilder<[InlineResponse20014]> {
        var path = "/iserver/account/{accountId}/alerts"
        let accountIdPreEscape = "\(accountId)"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{accountId}", with: accountIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[InlineResponse20014]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get details of an alert
     
     - parameter _id: (path) alert id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func iserverAccountAlertIdGet(_id: String, completion: @escaping ((_ data: AlertResponse?,_ error: Error?) -> Void)) {
        iserverAccountAlertIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get details of an alert
     - GET /iserver/account/alert/{id}
     - Use the endpoint /iserver/account/{accountId}/alerts to receive the alert id. The order_id in the response is the alert id. 
     - examples: [{contentType=application/json, example={
  "alert_mta_currency" : "alert_mta_currency",
  "alert_repeatable" : 1,
  "alert_triggered" : true,
  "itws_orders_only" : 2,
  "alert_send_message" : 5,
  "tif" : "tif",
  "order_status" : "Submitted",
  "condition_size" : 3,
  "alert_play_audio" : "alert_play_audio",
  "alert_show_popup" : 7,
  "alert_email" : "alert_email",
  "order_not_editable" : true,
  "alert_message" : "alert_message",
  "expire_time" : "20201105-19:51:14",
  "tool_id" : 9,
  "alert_active" : 6,
  "time_zone" : "time_zone",
  "alert_mta_defaults" : "alert_mta_defaults",
  "outsideRth" : 5,
  "alert_default_type" : "alert_default_type",
  "condition_outside_rth" : 2,
  "conditions" : [ {
    "condition_logic_bind" : "condition_logic_bind",
    "conidex" : "8314@SMART",
    "contract_description_1" : "FB Stock (NASDAQ.NMS)",
    "condition_trigger_method" : "0",
    "condition_operator" : ">=",
    "condition_type" : 4,
    "condition_value" : "220",
    "condition_time_zone" : "condition_time_zone"
  }, {
    "condition_logic_bind" : "condition_logic_bind",
    "conidex" : "8314@SMART",
    "contract_description_1" : "FB Stock (NASDAQ.NMS)",
    "condition_trigger_method" : "0",
    "condition_operator" : ">=",
    "condition_type" : 4,
    "condition_value" : "220",
    "condition_time_zone" : "condition_time_zone"
  } ],
  "order_id" : 0,
  "account" : "account",
  "alert_name" : "alert_name"
}}]
     
     - parameter _id: (path) alert id 

     - returns: RequestBuilder<AlertResponse> 
     */
    open class func iserverAccountAlertIdGetWithRequestBuilder(_id: String) -> RequestBuilder<AlertResponse> {
        var path = "/iserver/account/alert/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AlertResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get MTA alert
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func iserverAccountMtaGet(completion: @escaping ((_ data: AlertResponse?,_ error: Error?) -> Void)) {
        iserverAccountMtaGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get MTA alert
     - GET /iserver/account/mta
     - Each login user only has one mobile trading assistant (MTA) alert with it's own unique tool id. The tool id cannot be changed. When modified a new order Id is generated. MTA alerts can not be created or deleted. If you call delete /iserver/account/:accountId/alert/:alertId, it will reset MTA to default. See [here](https://www.interactivebrokers.com/en/software/mobileiphonemobile/mobileiphone.htm#monitor/trading-assistant.htm) for more information on MTA alerts. 
     - examples: [{contentType=application/json, example={
  "alert_mta_currency" : "alert_mta_currency",
  "alert_repeatable" : 1,
  "alert_triggered" : true,
  "itws_orders_only" : 2,
  "alert_send_message" : 5,
  "tif" : "tif",
  "order_status" : "Submitted",
  "condition_size" : 3,
  "alert_play_audio" : "alert_play_audio",
  "alert_show_popup" : 7,
  "alert_email" : "alert_email",
  "order_not_editable" : true,
  "alert_message" : "alert_message",
  "expire_time" : "20201105-19:51:14",
  "tool_id" : 9,
  "alert_active" : 6,
  "time_zone" : "time_zone",
  "alert_mta_defaults" : "alert_mta_defaults",
  "outsideRth" : 5,
  "alert_default_type" : "alert_default_type",
  "condition_outside_rth" : 2,
  "conditions" : [ {
    "condition_logic_bind" : "condition_logic_bind",
    "conidex" : "8314@SMART",
    "contract_description_1" : "FB Stock (NASDAQ.NMS)",
    "condition_trigger_method" : "0",
    "condition_operator" : ">=",
    "condition_type" : 4,
    "condition_value" : "220",
    "condition_time_zone" : "condition_time_zone"
  }, {
    "condition_logic_bind" : "condition_logic_bind",
    "conidex" : "8314@SMART",
    "contract_description_1" : "FB Stock (NASDAQ.NMS)",
    "condition_trigger_method" : "0",
    "condition_operator" : ">=",
    "condition_type" : 4,
    "condition_value" : "220",
    "condition_time_zone" : "condition_time_zone"
  } ],
  "order_id" : 0,
  "account" : "account",
  "alert_name" : "alert_name"
}}]

     - returns: RequestBuilder<AlertResponse> 
     */
    open class func iserverAccountMtaGetWithRequestBuilder() -> RequestBuilder<AlertResponse> {
        let path = "/iserver/account/mta"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AlertResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
