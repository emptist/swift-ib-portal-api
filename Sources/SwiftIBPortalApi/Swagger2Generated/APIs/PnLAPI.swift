//
// PnLAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class PnLAPI {
    /**
     PnL for the selected account
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func iserverAccountPnlPartitionedGet(completion: @escaping ((_ data: InlineResponse20029?,_ error: Error?) -> Void)) {
        iserverAccountPnlPartitionedGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     PnL for the selected account
     - GET /iserver/account/pnl/partitioned
     - Returns an object containing PnL for the selected account and its models (if any). To receive streaming PnL the endpoint /ws can be used. Refer to [Streaming WebSocket Data](https://interactivebrokers.github.io/cpwebapi/RealtimeSubscription.html) for details. 
     - examples: [{contentType=application/json, example={
  "acctId" : "{}"
}}]

     - returns: RequestBuilder<InlineResponse20029> 
     */
    open class func iserverAccountPnlPartitionedGetWithRequestBuilder() -> RequestBuilder<InlineResponse20029> {
        let path = "/iserver/account/pnl/partitioned"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20029>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
