//
// AlertresponseConditions.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct AlertresponseConditions: Codable {

    /** Types: 1-Price, 3-Time, 4-Margin, 5-Trade, 6-Volume, 7: MTA market 8: MTA Position, 9: MTA Acc. Daily PN&amp;  */
    public var conditionType: Int?
    /** format, conid@exchange */
    public var conidex: String?
    public var contractDescription1: String?
    /** optional, operator for the current condition, can be &gt;&#x3D; or &lt;&#x3D; */
    public var conditionOperator: String?
    /** optional, only some type of conditions have triggerMethod */
    public var conditionTriggerMethod: String?
    /** can not be empty, can pass default value \&quot;*\&quot; */
    public var conditionValue: String?
    /** \&quot;a\&quot; means \&quot;AND\&quot;, \&quot;o\&quot; means \&quot;OR\&quot;, \&quot;n\&quot; means \&quot;END\&quot;, the last one condition in the condition array should \&quot;n\&quot;  */
    public var conditionLogicBind: String?
    /** only needed for some MTA alert condition */
    public var conditionTimeZone: String?

    public init(conditionType: Int?, conidex: String?, contractDescription1: String?, conditionOperator: String?, conditionTriggerMethod: String?, conditionValue: String?, conditionLogicBind: String?, conditionTimeZone: String?) {
        self.conditionType = conditionType
        self.conidex = conidex
        self.contractDescription1 = contractDescription1
        self.conditionOperator = conditionOperator
        self.conditionTriggerMethod = conditionTriggerMethod
        self.conditionValue = conditionValue
        self.conditionLogicBind = conditionLogicBind
        self.conditionTimeZone = conditionTimeZone
    }

    public enum CodingKeys: String, CodingKey { 
        case conditionType = "condition_type"
        case conidex
        case contractDescription1 = "contract_description_1"
        case conditionOperator = "condition_operator"
        case conditionTriggerMethod = "condition_trigger_method"
        case conditionValue = "condition_value"
        case conditionLogicBind = "condition_logic_bind"
        case conditionTimeZone = "condition_time_zone"
    }


}

