//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Summary: APIModel {

    public var amount: Double?

    public var currency: String?

    public var isNull: Bool?

    public var timestamp: Int?

    public var value: String?

    public init(amount: Double? = nil, currency: String? = nil, isNull: Bool? = nil, timestamp: Int? = nil, value: String? = nil) {
        self.amount = amount
        self.currency = currency
        self.isNull = isNull
        self.timestamp = timestamp
        self.value = value
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        amount = try container.decodeIfPresent("amount")
        currency = try container.decodeIfPresent("currency")
        isNull = try container.decodeIfPresent("isNull")
        timestamp = try container.decodeIfPresent("timestamp")
        value = try container.decodeIfPresent("value")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(amount, forKey: "amount")
        try container.encodeIfPresent(currency, forKey: "currency")
        try container.encodeIfPresent(isNull, forKey: "isNull")
        try container.encodeIfPresent(timestamp, forKey: "timestamp")
        try container.encodeIfPresent(value, forKey: "value")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Summary else { return false }
      guard self.amount == object.amount else { return false }
      guard self.currency == object.currency else { return false }
      guard self.isNull == object.isNull else { return false }
      guard self.timestamp == object.timestamp else { return false }
      guard self.value == object.value else { return false }
      return true
    }

    public static func == (lhs: Summary, rhs: Summary) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
