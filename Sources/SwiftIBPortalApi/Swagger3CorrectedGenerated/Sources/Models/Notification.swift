//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** notification */
public class Notification: APIModel {

    /** notification date */
    public var d: String?

    /** FYI code, we can use it to find whether the disclaimer is accepted or not in settings */
    public var fc: String?

    /** unique way to reference this notification */
    public var id: String?

    /** content of notification */
    public var md: String?

    /** title of notification */
    public var ms: String?

    /** 0-unread, 1-read */
    public var r: String?

    public init(d: String? = nil, fc: String? = nil, id: String? = nil, md: String? = nil, ms: String? = nil, r: String? = nil) {
        self.d = d
        self.fc = fc
        self.id = id
        self.md = md
        self.ms = ms
        self.r = r
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        d = try container.decodeIfPresent("D")
        fc = try container.decodeIfPresent("FC")
        id = try container.decodeIfPresent("ID")
        md = try container.decodeIfPresent("MD")
        ms = try container.decodeIfPresent("MS")
        r = try container.decodeIfPresent("R")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(d, forKey: "D")
        try container.encodeIfPresent(fc, forKey: "FC")
        try container.encodeIfPresent(id, forKey: "ID")
        try container.encodeIfPresent(md, forKey: "MD")
        try container.encodeIfPresent(ms, forKey: "MS")
        try container.encodeIfPresent(r, forKey: "R")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Notification else { return false }
      guard self.d == object.d else { return false }
      guard self.fc == object.fc else { return false }
      guard self.id == object.id else { return false }
      guard self.md == object.md else { return false }
      guard self.ms == object.ms else { return false }
      guard self.r == object.r else { return false }
      return true
    }

    public static func == (lhs: Notification, rhs: Notification) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
