//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** future contract information */
public struct IBFuture: APIModel {

    /** conid of the future contract */
    public let conid: Int?

    public let expirationDate: String?

    /** last trading day */
    public let ltd: String?

    public let symbol: String?

    public let underlyingConid: Int?

    public init(conid: Int? = nil, expirationDate: String? = nil, ltd: String? = nil, symbol: String? = nil, underlyingConid: Int? = nil) {
        self.conid = conid
        self.expirationDate = expirationDate
        self.ltd = ltd
        self.symbol = symbol
        self.underlyingConid = underlyingConid
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        conid = try container.decodeIfPresent("conid")
        expirationDate = try container.decodeIfPresent("expirationDate")
        ltd = try container.decodeIfPresent("ltd")
        symbol = try container.decodeIfPresent("symbol")
        underlyingConid = try container.decodeIfPresent("underlyingConid")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(conid, forKey: "conid")
        try container.encodeIfPresent(expirationDate, forKey: "expirationDate")
        try container.encodeIfPresent(ltd, forKey: "ltd")
        try container.encodeIfPresent(symbol, forKey: "symbol")
        try container.encodeIfPresent(underlyingConid, forKey: "underlyingConid")
    }

}
